[{"path":"moderndive.github.io/moderndive/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"moderndive.github.io/moderndive/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to moderndive","title":"Contributing to moderndive","text":"outlines propose change moderndive. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"moderndive.github.io/moderndive/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to moderndive","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"moderndive.github.io/moderndive/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to moderndive","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"moderndive.github.io/moderndive/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to moderndive","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"moderndive/moderndive\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"moderndive.github.io/moderndive/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to moderndive","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"moderndive.github.io/moderndive/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to moderndive","text":"Please note moderndive project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"moderndive.github.io/moderndive/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Albert Y. Kim  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. moderndive Copyright (C) 2020 Albert Y. Kim This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"present moderndive R package datasets functions tidyverse-friendly introductory linear regression (Wickham, Averick, et al. 2019). tools leverage well-developed tidyverse broom packages facilitate 1) working regression tables include confidence intervals, 2) accessing regression outputs observation level (e.g. fitted/predicted values residuals), 3) inspecting scalar summaries regression fit (e.g. R2R^2, Radj2R^2_{adj}, mean squared error), 4) visualizing parallel slopes regression models using ggplot2-like syntax (Wickham, Chang, et al. 2019; Robinson Hayes 2019). R package designed supplement book “Statistical Inference via Data Science: ModernDive R Tidyverse” (Ismay Kim 2019). Note book also available online https://moderndive.com referred “ModernDive” short.","code":""},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"statement-of-need","dir":"Articles","previous_headings":"","what":"Statement of Need","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Linear regression long staple introductory statistics courses. curricula introductory statistics courses much evolved late, overall importance regression remains (American Statistical Association Undergraduate Guidelines Workgroup 2016). Furthermore, use R statistical programming language statistical analysis new, recent developments tidyverse suite packages made statistical computation R accessible broader audience (Wickham, Averick, et al. 2019). go one step leveraging tidyverse broom packages make linear regression accessible students taking introductory statistics course (Robinson Hayes 2019). students likely new statistical computation R; designed moderndive students mind.","code":""},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Let’s load R packages going need. Let’s consider data gathered end semester student evaluations sample 463 courses taught 94 professors University Texas Austin (Diez, Barr, Çetinkaya-Rundel 2015). data included evals data frame moderndive package. following table, present subset 9 14 variables included random sample 5 courses1: ID uniquely identifies course whereas prof_ID identifies professor taught course. distinction important since many professors taught one course. score outcome variable interest: average professor evaluation score 5 given students course. remaining variables demographic variables describing course’s instructor, including bty_avg (average “beauty” score) professor given panel 6 students.2","code":"library(moderndive) library(ggplot2) library(dplyr) library(knitr) library(broom)"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"regression-analysis-the-good-old-fashioned-way","dir":"Articles","previous_headings":"Introduction","what":"Regression analysis the “good old-fashioned” way","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Let’s fit simple linear regression model teaching score function instructor age using lm() function. Let’s now study output fitted model score_model “good old-fashioned way”: using summary() calls summary.lm() behind scenes (’ll refer interchangeably throughout paper). 5 common student questions ’ve heard years introductory statistics courses based output: “Wow! Look p-value stars! Stars good, try get many stars, right?” “extract values regression table?” “fitted/predicted values residuals?” “apply model new set data make predictions?” “stuff bottom?”","code":"score_model <- lm(score ~ age, data = evals) summary(score_model) ##  ## Call: ## lm(formula = score ~ age, data = evals) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -1.9185 -0.3531  0.1172  0.4172  0.8825  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  4.461932   0.126778  35.195   <2e-16 *** ## age         -0.005938   0.002569  -2.311   0.0213 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.5413 on 461 degrees of freedom ## Multiple R-squared:  0.01146,    Adjusted R-squared:  0.009311  ## F-statistic: 5.342 on 1 and 461 DF,  p-value: 0.02125"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"regression-analysis-using-moderndive","dir":"Articles","previous_headings":"Introduction","what":"Regression analysis using moderndive","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"address questions, ’ve included three functions moderndive package take fitted model object input return information summary.lm(), output tidyverse-friendly format (Wickham, Averick, et al. 2019). ’ll see later, three functions thin wrappers existing functions broom package converting statistical objects tidy tibbles, modified introductory statistics student mind (Robinson Hayes 2019). Get tidy regression table confidence intervals: Get information point/observation regression, including fitted/predicted values residuals, single data frame: Get scalar summaries regression fit including R2R^2 Radj2R^2_{adj} also (root) mean-squared error:","code":"get_regression_table(score_model) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.21     4.71  ## 2 age         -0.006     0.003     -2.31   0.021   -0.011   -0.001 get_regression_points(score_model) ## # A tibble: 463 × 5 ##       ID score   age score_hat residual ##    <int> <dbl> <int>     <dbl>    <dbl> ##  1     1   4.7    36      4.25    0.452 ##  2     2   4.1    36      4.25   -0.148 ##  3     3   3.9    36      4.25   -0.348 ##  4     4   4.8    36      4.25    0.552 ##  5     5   4.6    59      4.11    0.488 ##  6     6   4.3    59      4.11    0.188 ##  7     7   2.8    59      4.11   -1.31  ##  8     8   4.1    51      4.16   -0.059 ##  9     9   3.4    51      4.16   -0.759 ## 10    10   4.5    40      4.22    0.276 ## # ℹ 453 more rows get_regression_summaries(score_model) ## # A tibble: 1 × 9 ##   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df ##       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> ## 1     0.011         0.009 0.292 0.540 0.541      5.34   0.021     1 ## # ℹ 1 more variable: nobs <dbl>"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"bonus-visualizing-parallel-slopes-models-with-moderndive","dir":"Articles","previous_headings":"Introduction","what":"Bonus: Visualizing parallel slopes models with moderndive","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Furthermore, say like create visualization relationship two numerical variables third categorical variable kk levels. Let’s create using colored scatterplot via ggplot2 package data visualization (Wickham, Chang, et al. 2019). Using geom_smooth(method = \"lm\", se = FALSE) yields visualization interaction model kk regression lines intercept slope. example , extend previous regression model now mapping categorical variable ethnicity color aesthetic. Visualization interaction model. However, many introductory statistics courses start easier teach “common slope, different intercepts” regression model, also known parallel slopes model. However, argument plot models exists within geom_smooth(). Evgeni Chasnovski thus wrote custom geom_ extension ggplot2 called geom_parallel_slopes(); extension included moderndive package. Much like geom_smooth() ggplot2 package, add geom_parallel_slopes() layer code, resulting . Visualization parallel slopes model. point however, students inevitably ask sixth question: “ever use parallel slopes model?”","code":"# Code to visualize interaction model: ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE) +   labs(x = \"Age\", y = \"Teaching score\", color = \"Ethnicity\") # Code to visualize parallel slopes model: ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE) +   labs(x = \"Age\", y = \"Teaching score\", color = \"Ethnicity\")"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"why-should-you-use-the-moderndive-package","dir":"Articles","previous_headings":"Introduction","what":"Why should you use the moderndive package?","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"recap introduction, believe following functions included moderndive package get_regression_table() get_regression_points() get_regression_summaries() geom_parallel_slopes() effective pedagogical tools can help address six common questions posed students introductory linear regression performed R. now argue .","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"less-p-value-stars-more-confidence-intervals","dir":"Articles","previous_headings":"Features","what":"1. Less p-value stars, more confidence intervals","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"first common student question: “Wow! Look p-value stars! Stars good, try get many stars, right?” argue summary.lm() output deficient introductory statistics setting : Signif. codes:  0 '' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 encourage p-hacking. case yet convinced perniciousness p-hacking, perhaps comedian John Oliver can convince . silver bullet eliminating misinterpretations statistical inference, confidence intervals present students sense associated effect sizes explanatory variables. Thus, practical well statistical significance emphasized. included default output summary.lm(). Instead summary(), let’s use get_regression_table() function: Observe p-value stars omitted confidence intervals point estimates regression parameters included default. including output, can emphasize students “surround” point estimates estimate column. Note confidence level defaulted 95%; default can changed using conf.level argument:","code":"get_regression_table(score_model) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.21     4.71  ## 2 age         -0.006     0.003     -2.31   0.021   -0.011   -0.001 get_regression_table(score_model, conf.level = 0.99) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.13     4.79  ## 2 age         -0.006     0.003     -2.31   0.021   -0.013    0.001"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"outputs-as-tibbles","dir":"Articles","previous_headings":"Features","what":"2. Outputs as tibbles","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"second common student question: “extract values regression table?” one might argue extracting intercept slope coefficients can “simply” done using coefficients(score_model), standard errors? example, Google query “extract standard errors lm R” yielded results R mailing list Cross Validated suggesting run: argue task shouldn’t hard, especially introductory statistics setting. rectify , three get_regression_* functions return data frames tidyverse-style tibble (tidy table) format (Müller Wickham 2019). Therefore can extract columns using pull() function dplyr package (Wickham et al. 2020): equivalently can use $ sign operator base R: Furthermore, piping get_regression_table(score_model) output kable() function knitr package (Xie 2020), can obtain aesthetically pleasing regression tables R Markdown documents, instead tables written jarring computer output font:","code":"sqrt(diag(vcov(score_model))) ## (Intercept)         age  ## 0.126778499 0.002569157 get_regression_table(score_model) %>%   pull(std_error) ## [1] 0.127 0.003 get_regression_table(score_model)$std_error ## [1] 0.127 0.003 get_regression_table(score_model) %>%   kable()"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"birds-of-a-feather-should-flock-together-fitted-values-residuals","dir":"Articles","previous_headings":"Features","what":"3. Birds of a feather should flock together: Fitted values & residuals","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"third common student question: “fitted/predicted values residuals?” can extract point--point information regression model, fitted/predicted values residuals? (Note display first 10 463 values brevity’s sake.) original explanatory/predictor age outcome variable score evals, fitted/predicted values score_hat, residual floating around separate vectors? Since observation relates course, argue makes sense organize together data frame using get_regression_points(): Observe original outcome variable score explanatory/predictor variable age now supplemented fitted/predicted values score_hat residual columns. putting fitted values, predicted values, residuals next original data, argue computation values less opaque. example, instructors can emphasize values first row output computed. Furthermore, recall since outputs moderndive package tibble data frames, custom residual analysis plots can created instead relying default plots yielded plot.lm(). example, can check normality residuals using histogram residuals shown . Histogram visualizing distribution residuals. another example, can investigate potential relationships residuals explanatory/predictor variables presence heteroskedasticity using partial residual plots, like partial residual plot age shown . term “heteroskedasticity” new , corresponds variability one variable unequal across range values another variable. presence heteroskedasticity violates one assumptions inference linear regression. Partial residual residual plot age.","code":"fitted(score_model) ##        1        2        3        4        5        6        7  ## 4.248156 4.248156 4.248156 4.248156 4.111577 4.111577 4.111577  ##        8        9       10  ## 4.159083 4.159083 4.224403 residuals(score_model) ##           1           2           3           4           5  ##  0.45184376 -0.14815624 -0.34815624  0.55184376  0.48842294  ##           6           7           8           9          10  ##  0.18842294 -1.31157706 -0.05908286 -0.75908286  0.27559666 score_model_points <- get_regression_points(score_model) score_model_points ## # A tibble: 10 × 5 ##       ID score   age score_hat residual ##    <int> <dbl> <int>     <dbl>    <dbl> ##  1     1   4.7    36      4.25    0.452 ##  2     2   4.1    36      4.25   -0.148 ##  3     3   3.9    36      4.25   -0.348 ##  4     4   4.8    36      4.25    0.552 ##  5     5   4.6    59      4.11    0.488 ##  6     6   4.3    59      4.11    0.188 ##  7     7   2.8    59      4.11   -1.31  ##  8     8   4.1    51      4.16   -0.059 ##  9     9   3.4    51      4.16   -0.759 ## 10    10   4.5    40      4.22    0.276 # Code to visualize distribution of residuals: ggplot(score_model_points, aes(x = residual)) +   geom_histogram(bins = 20) +   labs(x = \"Residual\", y = \"Count\") # Code to visualize partial residual plot over age: ggplot(score_model_points, aes(x = age, y = residual)) +   geom_point() +   labs(x = \"Age\", y = \"Residual\")"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"a-quick-and-easy-kaggle-predictive-modeling-competition-submission","dir":"Articles","previous_headings":"Features","what":"4. A quick-and-easy Kaggle predictive modeling competition submission!","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"fourth common student question: “apply model new set data make predictions?” fields machine learning artificial intelligence gaining prominence, importance predictive modeling understated. Therefore, ’ve designed get_regression_points() function allow newdata argument quickly apply previously fitted model new observations. Let’s create artificial “new” dataset consisting two instructors age 39 42 save tibble data frame called new_prof. set newdata argument get_regression_points() apply previously fitted model score_model new data, score_hat holds corresponding fitted/predicted values. Let’s another example, time using Kaggle House Prices: Advanced Regression Techniques practice competition ( displays homepage competition). House prices Kaggle competition homepage. Kaggle competition requires fit/train model provided train.csv training set make predictions house prices provided test.csv test set. present application get_regression_points() function allowing students participate Kaggle competition. : Read training test data. Fit naive model house sale price function year sold training data. Make predictions test data write submission.csv file can submitted Kaggle using get_regression_points(). Note use ID argument use id variable test identify rows (requirement Kaggle competition submissions). submitting submission.csv leaderboard Kaggle competition, obtain “root mean squared logarithmic error” (RMSLE) score 0.42918 seen . Resulting Kaggle RMSLE score.","code":"new_prof <- tibble(age = c(39, 42)) get_regression_points(score_model, newdata = new_prof) ## # A tibble: 2 × 3 ##      ID   age score_hat ##   <int> <dbl>     <dbl> ## 1     1    39      4.23 ## 2     2    42      4.21 library(readr) library(dplyr) library(moderndive)  # Load in training and test set train <- read_csv(\"https://moderndive.com/data/train.csv\") test <- read_csv(\"https://moderndive.com/data/test.csv\")  # Fit model: house_model <- lm(SalePrice ~ YrSold, data = train)  # Make predictions and save in appropriate data frame format: submission <- house_model %>%   get_regression_points(newdata = test, ID = \"Id\") %>%   select(Id, SalePrice = SalePrice_hat)  # Write predictions to csv: write_csv(submission, \"submission.csv\")"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"scalar-summaries-of-linear-regression-model-fits","dir":"Articles","previous_headings":"Features","what":"5. Scalar summaries of linear regression model fits","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"fifth common student question: “stuff bottom?” Recall output standard summary.lm() earlier: Say wanted extract scalar model summaries bottom output, R2R^2, Radj2R^2_{adj}, FF-statistic. can using get_regression_summaries() function. ’ve supplemented standard scalar summaries output yielded summary() mean squared error mse root mean squared error rmse given popularity machine learning settings.","code":"##  ## Call: ## lm(formula = score ~ age, data = evals) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -1.9185 -0.3531  0.1172  0.4172  0.8825  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  4.461932   0.126778  35.195   <2e-16 *** ## age         -0.005938   0.002569  -2.311   0.0213 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.5413 on 461 degrees of freedom ## Multiple R-squared:  0.01146,    Adjusted R-squared:  0.009311  ## F-statistic: 5.342 on 1 and 461 DF,  p-value: 0.02125 get_regression_summaries(score_model) ## # A tibble: 1 × 9 ##   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df ##       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> ## 1     0.011         0.009 0.292 0.540 0.541      5.34   0.021     1 ## # ℹ 1 more variable: nobs <dbl>"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"plot-parallel-slopes-regression-models","dir":"Articles","previous_headings":"Features","what":"6. Plot parallel slopes regression models","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Finally, last common student question: “ever use parallel slopes model?” example, recall earlier visualizations interaction parallel slopes models teaching score function age ethnicity saw Figures . Let’s present visualizations side--side . Interaction (left) parallel slopes (right) models. Students might wondering “use parallel slopes model right data clearly form ”X” pattern seen interaction model left?” excellent opportunity gently introduce notion model selection Occam’s Razor: interaction model used parallel slopes model additional complexity interaction model warranted. , define model “complexity/simplicity” terms number parameters corresponding regression tables: interaction model “complex” evidenced regression table involving 4 rows parameter estimates whereas parallel slopes model “simpler” evidenced regression table involving 3 parameter estimates. can argued however additional complexity warranted given clearly different slopes left-hand plot . now present contrasting example, time Chapter 6 online version ModernDive Subsection 6.3.1 involving Massachusetts USA public high schools.3 Let’s plot interaction parallel slopes models . Interaction (left) parallel slopes (right) models. terms corresponding regression tables, observe corresponding regression table parallel slopes model 4 rows opposed 6 interaction model, reflecting higher degree “model simplicity.” Unlike earlier comparison interaction parallel slopes models , case argued additional complexity interaction model warranted since 3 three regression lines left-hand interaction already somewhat parallel. Therefore simpler parallel slopes model favored. Going one step , notice three regression lines visualization parallel slopes model right-hand plot similar intercepts. can thus argued additional model complexity induced introducing categorical variable school size warranted. Therefore, simple linear regression model using perc_disadvan percent student body economically disadvantaged favored. many students inevitably find results depressing, opinion, important additionally emphasize regression analyses can used empowering tool bring light inequities access education inform policy decisions.","code":"# Regression table for interaction model: interaction_evals <- lm(score ~ age * ethnicity, data = evals) get_regression_table(interaction_evals) ## # A tibble: 4 × 7 ##   term          estimate std_error statistic p_value lower_ci upper_ci ##   <chr>            <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept        2.61      0.518      5.04   0        1.59     3.63  ## 2 age              0.032     0.011      2.84   0.005    0.01     0.054 ## 3 ethnicity-no…    2.00      0.534      3.74   0        0.945    3.04  ## 4 age:ethnicit…   -0.04      0.012     -3.51   0       -0.063   -0.018  # Regression table for parallel slopes model: parallel_slopes_evals <- lm(score ~ age + ethnicity, data = evals) get_regression_table(parallel_slopes_evals) ## # A tibble: 3 × 7 ##   term          estimate std_error statistic p_value lower_ci upper_ci ##   <chr>            <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept        4.37      0.136     32.1    0        4.1      4.63  ## 2 age             -0.006     0.003     -2.5    0.013   -0.012   -0.001 ## 3 ethnicity-no…    0.138     0.073      1.89   0.059   -0.005    0.282 # Code to plot interaction and parallel slopes models for MA_schools ggplot(   MA_schools,   aes(x = perc_disadvan, y = average_sat_math, color = size) ) +   geom_point(alpha = 0.25) +   labs(     x = \"% economically disadvantaged\",     y = \"Math SAT Score\",     color = \"School size\"   ) +   geom_smooth(method = \"lm\", se = FALSE)  ggplot(   MA_schools,   aes(x = perc_disadvan, y = average_sat_math, color = size) ) +   geom_point(alpha = 0.25) +   labs(     x = \"% economically disadvantaged\",     y = \"Math SAT Score\",     color = \"School size\"   ) +   geom_parallel_slopes(se = FALSE) # Regression table for interaction model: interaction_MA <-   lm(average_sat_math ~ perc_disadvan * size, data = MA_schools) get_regression_table(interaction_MA) ## # A tibble: 6 × 7 ##   term          estimate std_error statistic p_value lower_ci upper_ci ##   <chr>            <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept      594.       13.3      44.7     0      568.     620.    ## 2 perc_disadvan   -2.93      0.294    -9.96    0       -3.51    -2.35  ## 3 size-medium    -17.8      15.8      -1.12    0.263  -48.9     13.4   ## 4 size-large     -13.3      13.8      -0.962   0.337  -40.5     13.9   ## 5 perc_disadva…    0.146     0.371     0.393   0.694   -0.585    0.877 ## 6 perc_disadva…    0.189     0.323     0.586   0.559   -0.446    0.824  # Regression table for parallel slopes model: parallel_slopes_MA <-   lm(average_sat_math ~ perc_disadvan + size, data = MA_schools) get_regression_table(parallel_slopes_MA) ## # A tibble: 4 × 7 ##   term          estimate std_error statistic p_value lower_ci upper_ci ##   <chr>            <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept       588.       7.61     77.3     0       573.     603.   ## 2 perc_disadvan    -2.78     0.106   -26.1     0        -2.99    -2.57 ## 3 size-medium     -11.9      7.54     -1.58    0.115   -26.7      2.91 ## 4 size-large       -6.36     6.92     -0.919   0.359   -20.0      7.26"},{"path":[]},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"broom-wrappers","dir":"Articles","previous_headings":"The Details","what":"Three wrappers to broom functions","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"mentioned earlier, three get_regression_* functions wrappers functions broom package converting statistical analysis objects tidy tibbles along added tweaks, introductory statistics student mind (Robinson Hayes 2019): get_regression_table() wrapper broom::tidy(). get_regression_points() wrapper broom::augment(). get_regression_summaries wrapper broom::glance(). take approach address initial 5 common student questions outset article? writing wrappers pre-existing functions, instead creating new custom functions, minimal re-inventing wheel necessary. experience, novice R users hard time understanding broom package function names tidy(), augment(), glance(). make user-friendly, moderndive package wrappers much intuitively named get_regression_table(), get_regression_points(), get_regression_summaries(). variables included outputs 3 broom functions applicable introductory statistics students , found intuitive new R users. therefore cut variables output renamed remaining variables. example, compare outputs get_regression_points() wrapper function parent broom::augment() function. source code three get_regression_* functions can found GitHub.","code":"get_regression_points(score_model) ## # A tibble: 463 × 5 ##       ID score   age score_hat residual ##    <int> <dbl> <int>     <dbl>    <dbl> ##  1     1   4.7    36      4.25    0.452 ##  2     2   4.1    36      4.25   -0.148 ##  3     3   3.9    36      4.25   -0.348 ##  4     4   4.8    36      4.25    0.552 ##  5     5   4.6    59      4.11    0.488 ##  6     6   4.3    59      4.11    0.188 ##  7     7   2.8    59      4.11   -1.31  ##  8     8   4.1    51      4.16   -0.059 ##  9     9   3.4    51      4.16   -0.759 ## 10    10   4.5    40      4.22    0.276 ## # ℹ 453 more rows broom::augment(score_model) ## # A tibble: 463 × 8 ##    score   age .fitted  .resid    .hat .sigma   .cooksd .std.resid ##    <dbl> <int>   <dbl>   <dbl>   <dbl>  <dbl>     <dbl>      <dbl> ##  1   4.7    36    4.25  0.452  0.00560  0.542 0.00197        0.837 ##  2   4.1    36    4.25 -0.148  0.00560  0.542 0.000212      -0.274 ##  3   3.9    36    4.25 -0.348  0.00560  0.542 0.00117       -0.645 ##  4   4.8    36    4.25  0.552  0.00560  0.541 0.00294        1.02  ##  5   4.6    59    4.11  0.488  0.00471  0.541 0.00193        0.904 ##  6   4.3    59    4.11  0.188  0.00471  0.542 0.000288       0.349 ##  7   2.8    59    4.11 -1.31   0.00471  0.538 0.0139        -2.43  ##  8   4.1    51    4.16 -0.0591 0.00232  0.542 0.0000139     -0.109 ##  9   3.4    51    4.16 -0.759  0.00232  0.541 0.00229       -1.40  ## 10   4.5    40    4.22  0.276  0.00374  0.542 0.000488       0.510 ## # ℹ 453 more rows"},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"custom-geometries","dir":"Articles","previous_headings":"The Details","what":"Custom geometries","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"geom_parallel_slopes() custom built geom extension ggplot2 package. example, ggplot2 webpage page gives instructions create extensions. source code geom_parallel_slopes() written Evgeni Chasnovski can found GitHub.","code":""},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"author-contributions","dir":"Articles","previous_headings":"","what":"Author contributions","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Albert Y. Kim Chester Ismay contributed equally development moderndive package. Albert Y. Kim wrote majority initial version manuscript Chester Ismay writing rest. Max Kuhn provided guidance feedback various stages package development manuscript writing.","code":""},{"path":"moderndive.github.io/moderndive/articles/moderndive.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"`moderndive`: Datasets and functions for `tidyverse`-friendly introductory linear regression","text":"Many thanks Jenny Smetzer @smetzer180, Luke W. Johnston @lwjohnst86, Lisa Rosenthal @lisamr helpful feedback vignette Evgeni Chasnovski @echasnovski contributing geom_parallel_slopes() function via GitHub pull request. authors financial support disclose.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Take a `moderndive` into introductory linear regression with R","text":"present moderndive R package datasets functions tidyverse-friendly introductory linear regression (Wickham, Averick, et al. 2019). tools leverage well-developed tidyverse broom packages facilitate 1) working regression tables include confidence intervals, 2) accessing regression outputs observation level (e.g. fitted/predicted values residuals), 3) inspecting scalar summaries regression fit (e.g. R2R^2, Radj2R^2_{adj}, mean squared error), 4) visualizing parallel slopes regression models using ggplot2-like syntax (Wickham, Chang, et al. 2019; Robinson Hayes 2019). R package designed supplement book “Statistical Inference via Data Science: ModernDive R Tidyverse” (Ismay Kim 2019). Note book also available online https://moderndive.com referred “ModernDive” short.","code":""},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"statement-of-need","dir":"Articles","previous_headings":"","what":"Statement of Need","title":"Take a `moderndive` into introductory linear regression with R","text":"Linear regression long staple introductory statistics courses. curricula introductory statistics courses much evolved late, overall importance regression remains (American Statistical Association Undergraduate Guidelines Workgroup 2016). Furthermore, use R statistical programming language statistical analysis new, recent developments tidyverse suite packages made statistical computation R accessible broader audience (Wickham, Averick, et al. 2019). go one step leveraging tidyverse broom packages make linear regression accessible students taking introductory statistics course (Robinson Hayes 2019). students likely new statistical computation R; designed moderndive students mind.","code":""},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Take a `moderndive` into introductory linear regression with R","text":"Let’s load R packages going need. Let’s consider data gathered end semester student evaluations sample 463 courses taught 94 professors University Texas Austin (Diez, Barr, Çetinkaya-Rundel 2015). data included evals data frame moderndive package. following table, present subset 9 14 variables included random sample 5 courses1: ID uniquely identifies course whereas prof_ID identifies professor taught course. distinction important since many professors taught one course. score outcome variable interest: average professor evaluation score 5 given students course. remaining variables demographic variables describing course’s instructor, including bty_avg (average “beauty” score) professor given panel 6 students.2","code":"library(moderndive) library(ggplot2) library(dplyr) library(knitr) library(broom)"},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"regression-analysis-the-good-old-fashioned-way","dir":"Articles","previous_headings":"Introduction","what":"Regression analysis the “good old-fashioned” way","title":"Take a `moderndive` into introductory linear regression with R","text":"Let’s fit simple linear regression model teaching score function instructor age using lm() function. Let’s now study output fitted model score_model “good old-fashioned way”: using summary() calls summary.lm() behind scenes (’ll refer interchangeably throughout paper).","code":"score_model <- lm(score ~ age, data = evals) summary(score_model) ##  ## Call: ## lm(formula = score ~ age, data = evals) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -1.9185 -0.3531  0.1172  0.4172  0.8825  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  4.461932   0.126778  35.195   <2e-16 *** ## age         -0.005938   0.002569  -2.311   0.0213 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.5413 on 461 degrees of freedom ## Multiple R-squared:  0.01146,    Adjusted R-squared:  0.009311  ## F-statistic: 5.342 on 1 and 461 DF,  p-value: 0.02125"},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"regression-analysis-using-moderndive","dir":"Articles","previous_headings":"Introduction","what":"Regression analysis using moderndive","title":"Take a `moderndive` into introductory linear regression with R","text":"improvement base R’s regression functions, ’ve included three functions moderndive package take fitted model object input return information summary.lm(), output tidyverse-friendly format (Wickham, Averick, et al. 2019). ’ll see later, three functions thin wrappers existing functions broom package converting statistical objects tidy tibbles, modified introductory statistics student mind (Robinson Hayes 2019). Get tidy regression table confidence intervals: Get information point/observation regression, including fitted/predicted values residuals, single data frame: Get scalar summaries regression fit including R2R^2 Radj2R^2_{adj} also (root) mean-squared error: Furthermore, say like create visualization relationship two numerical variables third categorical variable kk levels. Let’s create using colored scatterplot via ggplot2 package data visualization (Wickham, Chang, et al. 2019). Using geom_smooth(method = \"lm\", se = FALSE) yields visualization interaction model kk regression lines intercept slope. example , extend previous regression model now mapping categorical variable ethnicity color aesthetic. Visualization interaction model. However, many introductory statistics courses start easier teach “common slope, different intercepts” regression model, also known parallel slopes model. However, argument plot models exists within geom_smooth(). Evgeni Chasnovski thus wrote custom geom_ extension ggplot2 called geom_parallel_slopes(); extension included moderndive package. Much like geom_smooth() ggplot2 package, add geom_parallel_slopes() layer code, resulting . Visualization parallel slopes model.","code":"get_regression_table(score_model) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.21     4.71  ## 2 age         -0.006     0.003     -2.31   0.021   -0.011   -0.001 get_regression_points(score_model) ## # A tibble: 463 × 5 ##       ID score   age score_hat residual ##    <int> <dbl> <int>     <dbl>    <dbl> ##  1     1   4.7    36      4.25    0.452 ##  2     2   4.1    36      4.25   -0.148 ##  3     3   3.9    36      4.25   -0.348 ##  4     4   4.8    36      4.25    0.552 ##  5     5   4.6    59      4.11    0.488 ##  6     6   4.3    59      4.11    0.188 ##  7     7   2.8    59      4.11   -1.31  ##  8     8   4.1    51      4.16   -0.059 ##  9     9   3.4    51      4.16   -0.759 ## 10    10   4.5    40      4.22    0.276 ## # ℹ 453 more rows get_regression_summaries(score_model) ## # A tibble: 1 × 9 ##   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df ##       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> ## 1     0.011         0.009 0.292 0.540 0.541      5.34   0.021     1 ## # ℹ 1 more variable: nobs <dbl> # Code to visualize interaction model: ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE) +   labs(x = \"Age\", y = \"Teaching score\", color = \"Ethnicity\") # Code to visualize parallel slopes model: ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE) +   labs(x = \"Age\", y = \"Teaching score\", color = \"Ethnicity\")"},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"repository-readme","dir":"Articles","previous_headings":"","what":"Repository README","title":"Take a `moderndive` into introductory linear regression with R","text":"GitHub repository README, present -depth discussion six features moderndive package: Focus less p-value stars, confidence intervals Outputs tibbles Produce residual analysis plots scratch using ggplot2 quick--easy Kaggle predictive modeling competition submission! Visual model selection: plot parallel slopes & interaction regression models Produce metrics quality regression model fits Furthermore, discuss inner-workings moderndive package: leverages broom package wrappers builds custom ggplot2 geometry geom_parallel_slopes() function allows quick visualization parallel slopes models regression.","code":""},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"author-contributions","dir":"Articles","previous_headings":"","what":"Author contributions","title":"Take a `moderndive` into introductory linear regression with R","text":"Albert Y. Kim Chester Ismay contributed equally development moderndive package. Albert Y. Kim wrote majority initial version manuscript Chester Ismay writing rest. Max Kuhn provided guidance feedback various stages package development manuscript writing.","code":""},{"path":"moderndive.github.io/moderndive/articles/paper.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Take a `moderndive` into introductory linear regression with R","text":"Many thanks Jenny Smetzer @smetzer180, Luke W. Johnston @lwjohnst86, Lisa Rosenthal @lisamr helpful feedback paper Evgeni Chasnovski @echasnovski contributing geom_parallel_slopes() function via GitHub pull request. authors financial support disclose.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Albert Y. Kim. Author, maintainer. Chester Ismay. Author. Andrew Bray. Contributor. Delaney Moran. Contributor. Evgeni Chasnovski. Contributor. Hopper. Contributor. Benjamin S. Baumer. Contributor. Marium Tapal. Contributor. Wayne Ndlovu. Contributor. Catherine Peppers. Contributor. Annah Mutaya. Contributor. Anushree Goswami. Contributor. Ziyue Yang. Contributor. Clara Li. Contributor. Caroline McKenna. Contributor. Catherine Park. Contributor. Abbie Benfield. Contributor. Georgia Gans. Contributor. Kacey Jean-Jacques. Contributor. Swaha Bhattacharya. Contributor. Vivian Almaraz. Contributor. Elle Jo Whalen. Contributor. Jacqueline Chen. Contributor. Michelle Flesaker. Contributor. Irene Foster. Contributor. Aushanae Haller. Contributor. Benjamin Bruncati. Contributor. Quinn White. Contributor. Tianshu Zhang. Contributor. Katelyn Diaz. Contributor. Rose Porta. Contributor. Renee Wu. Contributor. Arris Moise. Contributor. Kate Phan. Contributor. Grace Hartley. Contributor. Silas Weden. Contributor. Emma Vejcik. Contributor. Nikki Schuldt. Contributor. Tess Goldmann. Contributor. Hongtong Lin. Contributor. Alejandra Munoz. Contributor. Elina Gordon-Halpern. Contributor. Haley Schmidt. Contributor.","code":""},{"path":"moderndive.github.io/moderndive/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim, . Y. Ismay, C. Kuhn, M. (2021) Take moderndive introductory linear regression R Journal Open Source Education. 4(41), 115 https://doi.org/10.21105/jose.00115","code":"@Article{,   author = {Albert Y. Kim and Chester Ismay and Max Kuhn},   title = {Take a moderndive into introductory linear regression with R},   journal = {The Journal of Open Source Education},   year = {2021},   volume = {4},   number = {41},   issue = {115},   url = {https://doi.org/10.21105/jose.00115}, }"},{"path":[]},{"path":"moderndive.github.io/moderndive/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tidyverse-Friendly Introductory Linear Regression","text":"moderndive R package consists datasets functions tidyverse-friendly introductory linear regression. tools leverage well-developed tidyverse broom packages facilitate Working regression tables include confidence intervals Accessing regression outputs observation level (e.g. fitted/predicted values residuals) Inspecting scalar summaries regression fit (e.g. R-squared, R-squared adjusted, mean squared error) Visualizing parallel slopes regression models using ggplot2-like syntax. R package designed supplement book “Statistical Inference via Data Science: ModernDive R Tidyverse” available ModernDive.com. background, read Journal Open Source Education paper.","code":""},{"path":"moderndive.github.io/moderndive/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidyverse-Friendly Introductory Linear Regression","text":"Get released version CRAN: development version GitHub:","code":"install.packages(\"moderndive\") # If you haven't installed remotes yet, do so: # install.packages(\"remotes\") remotes::install_github(\"moderndive/moderndive\")"},{"path":"moderndive.github.io/moderndive/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Tidyverse-Friendly Introductory Linear Regression","text":"Get tidy regression table confidence intervals: Get information point/observation regression, including fitted/predicted values residuals, single data frame: Get scalar summaries regression fit including R-squared R-squared adjusted also (root) mean-squared error: Visualize parallel slopes models using geom_parallel_slopes() custom ggplot2 geometry:","code":"library(moderndive) score_model <- lm(score ~ age, data = evals) get_regression_table(score_model) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.21     4.71  ## 2 age         -0.006     0.003     -2.31   0.021   -0.011   -0.001 get_regression_points(score_model) ## # A tibble: 463 × 5 ##       ID score   age score_hat residual ##    <int> <dbl> <int>     <dbl>    <dbl> ##  1     1   4.7    36      4.25    0.452 ##  2     2   4.1    36      4.25   -0.148 ##  3     3   3.9    36      4.25   -0.348 ##  4     4   4.8    36      4.25    0.552 ##  5     5   4.6    59      4.11    0.488 ##  6     6   4.3    59      4.11    0.188 ##  7     7   2.8    59      4.11   -1.31  ##  8     8   4.1    51      4.16   -0.059 ##  9     9   3.4    51      4.16   -0.759 ## 10    10   4.5    40      4.22    0.276 ## # … with 453 more rows get_regression_summaries(score_model) ## # A tibble: 1 × 9 ##   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df  nobs ##       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> <dbl> ## 1     0.011         0.009 0.292 0.540 0.541      5.34   0.021     1   463 library(ggplot2) ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE) +   labs(x = \"Age\", y = \"Teaching score\", color = \"Ethnicity\")"},{"path":"moderndive.github.io/moderndive/index.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of Need","title":"Tidyverse-Friendly Introductory Linear Regression","text":"Linear regression long staple introductory statistics courses. curricula introductory statistics courses much evolved late, overall importance regression remains . Furthermore, use R statistical programming language statistical analysis new, recent developments tidyverse suite packages made statistical computation R accessible broader audience. go one step leveraging tidyverse broom packages make linear regression accessible students taking introductory statistics course. students likely new statistical computation R; designed moderndive students mind.","code":""},{"path":"moderndive.github.io/moderndive/index.html","id":"contributor-code-of-conduct","dir":"","previous_headings":"","what":"Contributor code of conduct","title":"Tidyverse-Friendly Introductory Linear Regression","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"moderndive.github.io/moderndive/index.html","id":"six-features","dir":"","previous_headings":"","what":"Six features","title":"Tidyverse-Friendly Introductory Linear Regression","text":"use moderndive package introductory linear regression? six features: Focus less p-value stars, confidence intervals Outputs tibbles Produce residual analysis plots scratch using ggplot2 quick--easy Kaggle predictive modeling competition submission! Visual model selection: plot parallel slopes & interaction regression models Produce metrics quality regression model fits","code":""},{"path":"moderndive.github.io/moderndive/index.html","id":"data-background","dir":"","previous_headings":"Six features","what":"Data background","title":"Tidyverse-Friendly Introductory Linear Regression","text":"first discuss model data background. data consists end semester student evaluations sample 463 courses taught 94 professors University Texas Austin. data included evals data frame moderndive package. following table, present subset 9 14 variables included random sample 5 courses[1]: ID uniquely identifies course whereas prof_ID identifies professor taught course. distinction important since many professors taught one course. score outcome variable interest: average professor evaluation score 5 given students course. remaining variables demographic variables describing course’s instructor, including bty_avg (average “beauty” score) professor given panel 6 students.[2]","code":""},{"path":"moderndive.github.io/moderndive/index.html","id":"id_1-focus-less-on-p-value-stars-more-confidence-intervals","dir":"","previous_headings":"Six features","what":"1. Focus less on p-value stars, more confidence intervals","title":"Tidyverse-Friendly Introductory Linear Regression","text":"argue summary.lm() output deficient introductory statistics setting : Signif. codes: 0 '' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 encourage p-hacking. case yet convinced perniciousness p-hacking, perhaps comedian John Oliver can convince . silver bullet eliminating misinterpretations statistical inference, confidence intervals present students sense associated effect sizes explanatory variables. Thus, practical well statistical significance emphasized. included default output summary.lm(). Instead summary(), let’s use get_regression_table() function: Observe p-value stars omitted confidence intervals point estimates regression parameters included default. including output, can emphasize students “surround” point estimates estimate column. Note confidence level defaulted 95%; default can changed using conf.level argument:","code":"get_regression_table(score_model) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.21     4.71  ## 2 age         -0.006     0.003     -2.31   0.021   -0.011   -0.001 get_regression_table(score_model, conf.level = 0.99) ## # A tibble: 2 × 7 ##   term      estimate std_error statistic p_value lower_ci upper_ci ##   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept    4.46      0.127     35.2    0        4.13     4.79  ## 2 age         -0.006     0.003     -2.31   0.021   -0.013    0.001"},{"path":"moderndive.github.io/moderndive/index.html","id":"id_2-outputs-as-tibbles","dir":"","previous_headings":"Six features","what":"2. Outputs as tibbles","title":"Tidyverse-Friendly Introductory Linear Regression","text":"one might argue extracting intercept slope coefficients can “simply” done using coefficients(score_model), standard errors? example, Google query “extract standard errors lm R” yielded results R mailing list Cross Validated suggesting run: argue task shouldn’t hard, especially introductory statistics setting. rectify , three get_regression_* functions return data frames tidyverse-style tibble (tidy table) format. Therefore can extract columns using pull() function dplyr package: equivalently can use $ sign operator base R: Furthermore, piping get_regression_table(score_model) output kable() function knitr package, can obtain aesthetically pleasing regression tables R Markdown documents, instead tables written jarring computer output font:","code":"sqrt(diag(vcov(score_model))) ## (Intercept)         age  ## 0.126778499 0.002569157 library(dplyr) get_regression_table(score_model) %>%   pull(std_error) ## [1] 0.127 0.003 get_regression_table(score_model)$std_error ## [1] 0.127 0.003 library(knitr) get_regression_table(score_model) %>%   kable()"},{"path":"moderndive.github.io/moderndive/index.html","id":"id_3-produce-residual-analysis-plots-from-scratch-using-ggplot2","dir":"","previous_headings":"Six features","what":"3. Produce residual analysis plots from scratch using ggplot2","title":"Tidyverse-Friendly Introductory Linear Regression","text":"can extract point--point information regression model, fitted/predicted values residuals? (Note display first 10 463 values brevity’s sake.) original explanatory/predictor age outcome variable score evals, fitted/predicted values score_hat, residual floating around separate vectors? Since observation relates course, argue makes sense organize together data frame using get_regression_points(): Observe original outcome variable score explanatory/predictor variable age now supplemented fitted/predicted values score_hat residual columns. putting fitted values, predicted values, residuals next original data, argue computation values less opaque. example, instructors can emphasize values first row output computed. Furthermore, recall since outputs moderndive package tibble data frames, custom residual analysis plots can created instead relying default plots yielded plot.lm(). example, can check normality residuals using histogram residuals shown . another example, can investigate potential relationships residuals explanatory/predictor variables presence heteroskedasticity using partial residual plots, like partial residual plot age shown . term “heteroskedasticity” new , corresponds variability one variable unequal across range values another variable. presence heteroskedasticity violates one assumptions inference linear regression.","code":"fitted(score_model) ##        1        2        3        4        5        6        7        8  ## 4.248156 4.248156 4.248156 4.248156 4.111577 4.111577 4.111577 4.159083  ##        9       10  ## 4.159083 4.224403 residuals(score_model) ##           1           2           3           4           5           6  ##  0.45184376 -0.14815624 -0.34815624  0.55184376  0.48842294  0.18842294  ##           7           8           9          10  ## -1.31157706 -0.05908286 -0.75908286  0.27559666 score_model_points <- get_regression_points(score_model) score_model_points ## # A tibble: 10 × 5 ##       ID score   age score_hat residual ##    <int> <dbl> <int>     <dbl>    <dbl> ##  1     1   4.7    36      4.25    0.452 ##  2     2   4.1    36      4.25   -0.148 ##  3     3   3.9    36      4.25   -0.348 ##  4     4   4.8    36      4.25    0.552 ##  5     5   4.6    59      4.11    0.488 ##  6     6   4.3    59      4.11    0.188 ##  7     7   2.8    59      4.11   -1.31  ##  8     8   4.1    51      4.16   -0.059 ##  9     9   3.4    51      4.16   -0.759 ## 10    10   4.5    40      4.22    0.276 # Code to visualize distribution of residuals: ggplot(score_model_points, aes(x = residual)) +   geom_histogram(bins = 20) +   labs(x = \"Residual\", y = \"Count\") # Code to visualize partial residual plot over age: ggplot(score_model_points, aes(x = age, y = residual)) +   geom_point() +   labs(x = \"Age\", y = \"Residual\")"},{"path":"moderndive.github.io/moderndive/index.html","id":"id_4-a-quick-and-easy-kaggle-predictive-modeling-competition-submission","dir":"","previous_headings":"Six features","what":"4. A quick-and-easy Kaggle predictive modeling competition submission!","title":"Tidyverse-Friendly Introductory Linear Regression","text":"fields machine learning artificial intelligence gaining prominence, importance predictive modeling understated. Therefore, ’ve designed get_regression_points() function allow newdata argument quickly apply previously fitted model new observations. Let’s create artificial “new” dataset consisting two instructors age 39 42 save tibble data frame called new_prof. set newdata argument get_regression_points() apply previously fitted model score_model new data, score_hat holds corresponding fitted/predicted values. Let’s another example, time using Kaggle House Prices: Advanced Regression Techniques practice competition ( displays homepage competition).   House prices Kaggle competition homepage. Kaggle competition requires fit/train model provided train.csv training set make predictions house prices provided test.csv test set. present application get_regression_points() function allowing students participate Kaggle competition. : Read training test data. Fit naive model house sale price function year sold training data. Make predictions test data write submission.csv file can submitted Kaggle using get_regression_points(). Note use ID argument use id variable test identify rows (requirement Kaggle competition submissions). submitting submission.csv leaderboard Kaggle competition, obtain “root mean squared logarithmic error” (RMSLE) score 0.42918 seen .   Resulting Kaggle RMSLE score.","code":"new_prof <- tibble(age = c(39, 42)) get_regression_points(score_model, newdata = new_prof) ## # A tibble: 2 × 3 ##      ID   age score_hat ##   <int> <dbl>     <dbl> ## 1     1    39      4.23 ## 2     2    42      4.21 library(readr) library(dplyr) library(moderndive)  # Load in training and test set train <- read_csv(\"https://moderndive.com/data/train.csv\") test <- read_csv(\"https://moderndive.com/data/test.csv\")  # Fit model: house_model <- lm(SalePrice ~ YrSold, data = train)  # Make predictions and save in appropriate data frame format: submission <- house_model %>%   get_regression_points(newdata = test, ID = \"Id\") %>%   select(Id, SalePrice = SalePrice_hat)  # Write predictions to csv: write_csv(submission, \"submission.csv\")"},{"path":"moderndive.github.io/moderndive/index.html","id":"id_5-visual-model-selection-plot-parallel-slopes--interaction-regression-models","dir":"","previous_headings":"Six features","what":"5. Visual model selection: plot parallel slopes & interaction regression models","title":"Tidyverse-Friendly Introductory Linear Regression","text":"example, recall earlier visualizations interaction parallel slopes models teaching score function age ethnicity saw Figures . Let’s present visualizations side--side . Students might wondering “use parallel slopes model right data clearly form ”X” pattern seen interaction model left?” excellent opportunity gently introduce notion model selection Occam’s Razor: interaction model used parallel slopes model additional complexity interaction model warranted. , define model “complexity/simplicity” terms number parameters corresponding regression tables: interaction model “complex” evidenced regression table involving 4 rows parameter estimates whereas parallel slopes model “simpler” evidenced regression table involving 3 parameter estimates. can argued however additional complexity warranted given clearly different slopes left-hand plot . now present contrasting example, time Chapter 6 online version ModernDive Subsection 6.3.1 involving Massachusetts USA public high schools.[3] Let’s plot interaction parallel slopes models . terms corresponding regression tables, observe corresponding regression table parallel slopes model 4 rows opposed 6 interaction model, reflecting higher degree “model simplicity.” Unlike earlier comparison interaction parallel slopes models , case argued additional complexity interaction model warranted since 3 three regression lines left-hand interaction already somewhat parallel. Therefore simpler parallel slopes model favored. Going one step , notice three regression lines visualization parallel slopes model right-hand plot similar intercepts. can thus argued additional model complexity induced introducing categorical variable school size warranted. Therefore, simple linear regression model using perc_disadvan percent student body economically disadvantaged favored. many students inevitably find results depressing, opinion, important additionally emphasize regression analyses can used empowering tool bring light inequities access education inform policy decisions.","code":"# Regression table for interaction model: interaction_evals <- lm(score ~ age * ethnicity, data = evals) get_regression_table(interaction_evals) ## # A tibble: 4 × 7 ##   term                    estimate std_error statistic p_value lower_ci upper_ci ##   <chr>                      <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept                  2.61      0.518      5.04   0        1.59     3.63  ## 2 age                        0.032     0.011      2.84   0.005    0.01     0.054 ## 3 ethnicity: not minority    2.00      0.534      3.74   0        0.945    3.04  ## 4 age:ethnicitynot minor…   -0.04      0.012     -3.51   0       -0.063   -0.018 # Regression table for parallel slopes model: parallel_slopes_evals <- lm(score ~ age + ethnicity, data = evals) get_regression_table(parallel_slopes_evals) ## # A tibble: 3 × 7 ##   term                    estimate std_error statistic p_value lower_ci upper_ci ##   <chr>                      <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept                  4.37      0.136     32.1    0        4.1      4.63  ## 2 age                       -0.006     0.003     -2.5    0.013   -0.012   -0.001 ## 3 ethnicity: not minority    0.138     0.073      1.89   0.059   -0.005    0.282 # Code to plot interaction and parallel slopes models for MA_schools ggplot(   MA_schools,   aes(x = perc_disadvan, y = average_sat_math, color = size) ) +   geom_point(alpha = 0.25) +   labs(     x = \"% economically disadvantaged\",     y = \"Math SAT Score\",     color = \"School size\"   ) +   geom_smooth(method = \"lm\", se = FALSE)  ggplot(   MA_schools,   aes(x = perc_disadvan, y = average_sat_math, color = size) ) +   geom_point(alpha = 0.25) +   labs(     x = \"% economically disadvantaged\",     y = \"Math SAT Score\",     color = \"School size\"   ) +   geom_parallel_slopes(se = FALSE) # Regression table for interaction model: interaction_MA <-   lm(average_sat_math ~ perc_disadvan * size, data = MA_schools) get_regression_table(interaction_MA) ## # A tibble: 6 × 7 ##   term                    estimate std_error statistic p_value lower_ci upper_ci ##   <chr>                      <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept                594.       13.3      44.7     0      568.     620.    ## 2 perc_disadvan             -2.93      0.294    -9.96    0       -3.51    -2.35  ## 3 size: medium             -17.8      15.8      -1.12    0.263  -48.9     13.4   ## 4 size: large              -13.3      13.8      -0.962   0.337  -40.5     13.9   ## 5 perc_disadvan:sizemedi…    0.146     0.371     0.393   0.694   -0.585    0.877 ## 6 perc_disadvan:sizelarge    0.189     0.323     0.586   0.559   -0.446    0.824 # Regression table for parallel slopes model: parallel_slopes_MA <-   lm(average_sat_math ~ perc_disadvan + size, data = MA_schools) get_regression_table(parallel_slopes_MA) ## # A tibble: 4 × 7 ##   term          estimate std_error statistic p_value lower_ci upper_ci ##   <chr>            <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> ## 1 intercept       588.       7.61     77.3     0       573.     603.   ## 2 perc_disadvan    -2.78     0.106   -26.1     0        -2.99    -2.57 ## 3 size: medium    -11.9      7.54     -1.58    0.115   -26.7      2.91 ## 4 size: large      -6.36     6.92     -0.919   0.359   -20.0      7.26"},{"path":"moderndive.github.io/moderndive/index.html","id":"id_6-produce-metrics-on-the-quality-of-regression-model-fits","dir":"","previous_headings":"Six features","what":"6. Produce metrics on the quality of regression model fits","title":"Tidyverse-Friendly Introductory Linear Regression","text":"Recall output standard summary.lm() earlier: Say wanted extract scalar model summaries bottom output, R-squared, R-squared adjusted, F-statistic, degrees freedom df. can using get_regression_summaries() function. ’ve supplemented standard scalar summaries output yielded summary() mean squared error mse root mean squared error rmse given popularity machine learning settings.","code":"##  ## Call: ## lm(formula = score ~ age, data = evals) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -1.9185 -0.3531  0.1172  0.4172  0.8825  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  4.461932   0.126778  35.195   <2e-16 *** ## age         -0.005938   0.002569  -2.311   0.0213 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.5413 on 461 degrees of freedom ## Multiple R-squared:  0.01146,    Adjusted R-squared:  0.009311  ## F-statistic: 5.342 on 1 and 461 DF,  p-value: 0.02125 get_regression_summaries(score_model) ## # A tibble: 1 × 9 ##   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df  nobs ##       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> <dbl> ## 1     0.011         0.009 0.292 0.540 0.541      5.34   0.021     1   463"},{"path":"moderndive.github.io/moderndive/index.html","id":"the-inner-workings","dir":"","previous_headings":"","what":"The inner workings","title":"Tidyverse-Friendly Introductory Linear Regression","text":"work? Let’s open hood moderndive package.","code":""},{"path":"moderndive.github.io/moderndive/index.html","id":"three-wrappers-to-broom-functions","dir":"","previous_headings":"The inner workings","what":"Three wrappers to broom functions","title":"Tidyverse-Friendly Introductory Linear Regression","text":"mentioned earlier, three get_regression_* functions wrappers functions broom package converting statistical analysis objects tidy tibbles along added tweaks, introductory statistics student mind: get_regression_table() wrapper broom::tidy(). get_regression_points() wrapper broom::augment(). get_regression_summaries wrapper broom::glance(). take approach address initial 5 common student questions outset article? writing wrappers pre-existing functions, instead creating new custom functions, minimal re-inventing wheel necessary. experience, novice R users hard time understanding broom package function names tidy(), augment(), glance(). make user-friendly, moderndive package wrappers much intuitively named get_regression_table(), get_regression_points(), get_regression_summaries(). variables included outputs 3 broom functions applicable introductory statistics students , found intuitive new R users. therefore cut variables output renamed remaining variables. example, compare outputs get_regression_points() wrapper function parent broom::augment() function. source code three get_regression_* functions can found .","code":"get_regression_points(score_model) broom::augment(score_model)"},{"path":"moderndive.github.io/moderndive/index.html","id":"custom-geometries","dir":"","previous_headings":"The inner workings","what":"Custom geometries","title":"Tidyverse-Friendly Introductory Linear Regression","text":"geom_parallel_slopes() custom built geom extension ggplot2 package. example, ggplot2 webpage page gives instructions create extensions. source code geom_parallel_slopes() written Evgeni Chasnovski can found GitHub. details remaining 5 variables, see help file running ?evals. Note gender collected binary variable time study (2005). details dataset, see help file running ?MA_schools.","code":""},{"path":"moderndive.github.io/moderndive/reference/DD_vs_SB.html","id":null,"dir":"Reference","previous_headings":"","what":"Dunkin Donuts vs Starbucks — DD_vs_SB","title":"Dunkin Donuts vs Starbucks — DD_vs_SB","text":"Number Dunkin Donuts & Starbucks, median income, population 1024 census tracts eastern Massachusetts 2016.","code":""},{"path":"moderndive.github.io/moderndive/reference/DD_vs_SB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dunkin Donuts vs Starbucks — DD_vs_SB","text":"","code":"DD_vs_SB"},{"path":"moderndive.github.io/moderndive/reference/DD_vs_SB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dunkin Donuts vs Starbucks — DD_vs_SB","text":"data frame 1024 rows representing census tracts 6 variables county County census tract located. Either Bristol, Essex, Middlesex, Norfolk, Plymouth, Suffolk county FIPS Federal Information Processing Standards code identifying census tract median_income Median income census tract population Population census tract shop_type Coffee shop type: Dunkin Donuts Starbucks shops Number shops","code":""},{"path":"moderndive.github.io/moderndive/reference/DD_vs_SB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dunkin Donuts vs Starbucks — DD_vs_SB","text":"US Census Bureau. Code used scrape data available https://github.com/DelaneyMoran/FinalProject","code":""},{"path":"moderndive.github.io/moderndive/reference/MA_schools.html","id":null,"dir":"Reference","previous_headings":"","what":"Massachusetts Public High Schools Data — MA_schools","title":"Massachusetts Public High Schools Data — MA_schools","text":"Data Massachusetts public high schools 2017","code":""},{"path":"moderndive.github.io/moderndive/reference/MA_schools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Massachusetts Public High Schools Data — MA_schools","text":"","code":"MA_schools"},{"path":"moderndive.github.io/moderndive/reference/MA_schools.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Massachusetts Public High Schools Data — MA_schools","text":"data frame 332 rows representing Massachusetts high schools 4 variables school_name High school name. average_sat_math Average SAT math score. Note 58 original 390 values variable missing; rows dropped consideration. perc_disadvan Percent student body considered economically disadvantaged. size Size school enrollment; small 13-341 students, medium 342-541 students, large 542-4264 students.","code":""},{"path":"moderndive.github.io/moderndive/reference/MA_schools.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Massachusetts Public High Schools Data — MA_schools","text":"original source data Massachusetts Department Education reports https://profiles.doe.mass.edu/state_report/, however data downloaded Kaggle https://www.kaggle.com/ndalziel/massachusetts-public-schools-data","code":""},{"path":"moderndive.github.io/moderndive/reference/alaska_flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Alaska flights data — alaska_flights","title":"Alaska flights data — alaska_flights","text":"-time data Alaska Airlines flights departed NYC (.e. JFK, LGA EWR) 2013. subset flights data frame nycflights13.","code":""},{"path":"moderndive.github.io/moderndive/reference/alaska_flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alaska flights data — alaska_flights","text":"","code":"alaska_flights"},{"path":"moderndive.github.io/moderndive/reference/alaska_flights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alaska flights data — alaska_flights","text":"data frame 714 rows representing Alaska Airlines flights 19 variables year, month, day Date departure. dep_time, arr_time Actual departure arrival times (format HHMM HMM), local tz. sched_dep_time, sched_arr_time Scheduled departure arrival times (format HHMM HMM), local tz. dep_delay, arr_delay Departure arrival delays, minutes. Negative times represent early departures/arrivals. carrier Two letter carrier abbreviation. See nycflights13::airlines get name. flight Flight number. tailnum Plane tail number. See nycflights13::planes additional metadata. origin, dest Origin destination. See nycflights13::airports additional metadata. air_time Amount time spent air, minutes. distance Distance airports, miles. hour, minute Time scheduled departure broken hour minutes. time_hour Scheduled date hour flight POSIXct date. Along origin, can used join flights data nycflights13::weather data.","code":""},{"path":"moderndive.github.io/moderndive/reference/alaska_flights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alaska flights data — alaska_flights","text":"RITA, Bureau transportation statistics","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/almonds_bowl.html","id":null,"dir":"Reference","previous_headings":"","what":"Chocolate-covered almonds data — almonds_bowl","title":"Chocolate-covered almonds data — almonds_bowl","text":"5000 chocolate-covered almonds selected large batch, weighed grams.","code":""},{"path":"moderndive.github.io/moderndive/reference/almonds_bowl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chocolate-covered almonds data — almonds_bowl","text":"","code":"almonds_bowl"},{"path":"moderndive.github.io/moderndive/reference/almonds_bowl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chocolate-covered almonds data — almonds_bowl","text":"data frame 5000 observations following 2 variables ID Identification value given chocolate-covered almond weight Weight chocolate-covered almond grams (nearest tenth)","code":""},{"path":"moderndive.github.io/moderndive/reference/almonds_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Chocolate-covered almonds data sample of size 25 — almonds_sample","title":"Chocolate-covered almonds data sample of size 25 — almonds_sample","text":"sample 25 chocolate-covered almonds, weighed grams.","code":""},{"path":"moderndive.github.io/moderndive/reference/almonds_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chocolate-covered almonds data sample of size 25 — almonds_sample","text":"","code":"almonds_sample"},{"path":"moderndive.github.io/moderndive/reference/almonds_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chocolate-covered almonds data sample of size 25 — almonds_sample","text":"data frame 25 observations following 2 variables replicate Replicate number set 1 since one sample ID Identification value given chocolate-covered almond weight Weight chocolate-covered almond grams (nearest tenth)","code":""},{"path":"moderndive.github.io/moderndive/reference/almonds_sample_100.html","id":null,"dir":"Reference","previous_headings":"","what":"Chocolate-covered almonds data sample of size 100 — almonds_sample_100","title":"Chocolate-covered almonds data sample of size 100 — almonds_sample_100","text":"sample 100 chocolate-covered almonds, weighed grams.","code":""},{"path":"moderndive.github.io/moderndive/reference/almonds_sample_100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chocolate-covered almonds data sample of size 100 — almonds_sample_100","text":"","code":"almonds_sample_100"},{"path":"moderndive.github.io/moderndive/reference/almonds_sample_100.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chocolate-covered almonds data sample of size 100 — almonds_sample_100","text":"data frame 100 observations following 2 variables replicate Replicate number set 1 since one sample ID Identification value given chocolate-covered almond weight Weight chocolate-covered almond grams (nearest tenth)","code":""},{"path":"moderndive.github.io/moderndive/reference/amazon_books.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of Amazon books — amazon_books","title":"Sample of Amazon books — amazon_books","text":"random sample 325 books Amazon.com.","code":""},{"path":"moderndive.github.io/moderndive/reference/amazon_books.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of Amazon books — amazon_books","text":"","code":"amazon_books"},{"path":"moderndive.github.io/moderndive/reference/amazon_books.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of Amazon books — amazon_books","text":"data frame 325 rows representing books listed Amazon 13 variables. title Book title author Author wrote book list_price recommended retail price book amazon_price lowest price book shown Amazon hard_paper book either hardcover paperback num_pages number pages book publisher Company issues book sale pub_year Year book published isbn_10 10-character ISBN number height, width, thick, weight_oz height, width, weight thickness book","code":""},{"path":"moderndive.github.io/moderndive/reference/amazon_books.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample of Amazon books — amazon_books","text":"Data Story Library (DASL) https://dasl.datadescription.com/datafile/amazon-books","code":""},{"path":"moderndive.github.io/moderndive/reference/avocados.html","id":null,"dir":"Reference","previous_headings":"","what":"Avocado Prices by US Region — avocados","title":"Avocado Prices by US Region — avocados","text":"Gathered https://docs.google.com/spreadsheets/d/1cNuj9V-9Xe8fqV3DQRhvsXJhER3zTkO1dSsQ1Q0j96g/edit#gid=1419070688","code":""},{"path":"moderndive.github.io/moderndive/reference/avocados.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Avocado Prices by US Region — avocados","text":"","code":"avocados"},{"path":"moderndive.github.io/moderndive/reference/avocados.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Avocado Prices by US Region — avocados","text":"data frame 54 regions 3 years weekly results date Week Data Recording average_price Average Price Avocado total_volume Total Amount Avocados small_hass_sold Amount Small Haas Avocados Sold large_hass_sold Amount Large Haas Avocados Sold xlarge_hass_sold Amount Extra Large Haas Avocados Sold total_bags Total Amount Bags Avocados small_bags Total Amount Bags Small Haas Avocados large_bags Total Amount Bags Large Haas Avocados x_large_bags Total Amount Bags Extra Large Haas Avocados type Type Sale year Year Sale region Region Sale Took Place","code":""},{"path":"moderndive.github.io/moderndive/reference/babies.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on maternal smoking and infant health — babies","title":"Data on maternal smoking and infant health — babies","text":"Data maternal smoking infant health","code":""},{"path":"moderndive.github.io/moderndive/reference/babies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data on maternal smoking and infant health — babies","text":"","code":"babies"},{"path":"moderndive.github.io/moderndive/reference/babies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on maternal smoking and infant health — babies","text":"data frame 1236 rows individual mothers. id Identification number pluralty Marked 5 single fetus, otherwise number fetuses outcome Marked 1 live birth survived least 28 days date Birth date 1096 January 1st, 1961 birthday Birth date mm-dd-yyyy format gestation Length gestation days, marked 999 unknown sex Infant's sex, 1 male, 2 female, 9 unknown wt Birth weight ounces, marked 999 unknown parity Total number previous pregnancies including fetal deaths stillbirths, marked 99 unknown race Mother's race 0-5 white, 6 Mexican, 7 Black, 8 Asian, 9 mixed, 99 unknown age Mother's age years termination pregnancy, 99=unknown ed Mother's education 0= less 8th grade, 1 = 8th -12th grade - graduate, 2= HS graduate–schooling , 3= HS+trade, 4=HS+college 5= College graduate, 6&7 Trade school HS unclear, 9=unknown ht Mother's height inches last completed inch, 99=unknown wt_1 Mother prepregnancy wt pounds, 999=unknown drace Father's race, coding mother's race dage Father's age, coding mother's age ded Father's education, coding mother's education dht Father's height, coding mother's height dwt Father's weight coding mother's weight marital 0= legally separated, 1=married, 2= divorced, 3=widowed, 5=never married inc Family yearly income $2500 increments 0 = 2500, 1=2500-4999, ..., 8= 12,500-14,999, 9=15000+, 98=unknown, 99=asked smoke mother smoke? 0=never, 1= smokes now, 2=current pregnancy, 3=, now, 9=unknown time mother quit, long ago? 0=never smoked, 1=still smokes, 2=current preg, 3=within 1 yr, 4= 1 2 years ago, 5= 2 3 yr ago, 6= 3 4 yrs ago, 7=5 9yrs ago, 8=10+yrs ago, 9=quit know, 98=unknown, 99=asked number Number cigs smoked per day past current smokers  0=never, 1=1-4, 2=5-9, 3=10-14, 4=15-19, 5=20-29, 6=30-39, 7=40-60, 8=60+, 9=smoke know, 98=unknown, 99=asked","code":""},{"path":"moderndive.github.io/moderndive/reference/babies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on maternal smoking and infant health — babies","text":"Data maternal smoking infant health https://www.stat.berkeley.edu/~statlabs/labs.html","code":""},{"path":"moderndive.github.io/moderndive/reference/bowl.html","id":null,"dir":"Reference","previous_headings":"","what":"A sampling bowl of red and white balls — bowl","title":"A sampling bowl of red and white balls — bowl","text":"sampling bowl used population simulated sampling exercise. Also known urn sampling framework https://en.wikipedia.org/wiki/Urn_problem.","code":""},{"path":"moderndive.github.io/moderndive/reference/bowl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sampling bowl of red and white balls — bowl","text":"","code":"bowl"},{"path":"moderndive.github.io/moderndive/reference/bowl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sampling bowl of red and white balls — bowl","text":"data frame 2400 rows representing different balls bowl, 900 red 1500 white. ball_ID ID variable used denote balls. Note value marked balls color color ball: red white","code":""},{"path":"moderndive.github.io/moderndive/reference/bowl_sample_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Tactile sample of size 50 from a bowl of balls — bowl_sample_1","title":"Tactile sample of size 50 from a bowl of balls — bowl_sample_1","text":"single tactile sample size n = 50 balls https://github.com/moderndive/moderndive/blob/master/data-raw/sampling_bowl.jpeg","code":""},{"path":"moderndive.github.io/moderndive/reference/bowl_sample_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tactile sample of size 50 from a bowl of balls — bowl_sample_1","text":"","code":"bowl_sample_1"},{"path":"moderndive.github.io/moderndive/reference/bowl_sample_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tactile sample of size 50 from a bowl of balls — bowl_sample_1","text":"data frame 50 rows representing different balls 1 variable. color Color ball sampled","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/bowl_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling from a bowl of balls — bowl_samples","title":"Sampling from a bowl of balls — bowl_samples","text":"Counting number red balls 10 samples size n = 50 balls https://github.com/moderndive/moderndive/blob/master/data-raw/sampling_bowl.jpeg","code":""},{"path":"moderndive.github.io/moderndive/reference/bowl_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling from a bowl of balls — bowl_samples","text":"","code":"bowl_samples"},{"path":"moderndive.github.io/moderndive/reference/bowl_samples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sampling from a bowl of balls — bowl_samples","text":"data frame 10 rows representing different groups students' samples size n = 50 5 variables group Group name red Number red balls sampled white Number white balls sampled green Number green balls sampled n Total number balls samples","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/coffee_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Coffee Quality Dataset — coffee_quality","title":"Coffee Quality Dataset — coffee_quality","text":"dataset contains detailed information coffee quality evaluations various origins. includes data country continent origin, farm name, lot number, various quality metrics. dataset also includes attributes related coffee processing, grading, specific sensory attributes.","code":""},{"path":"moderndive.github.io/moderndive/reference/coffee_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coffee Quality Dataset — coffee_quality","text":"","code":"coffee_quality"},{"path":"moderndive.github.io/moderndive/reference/coffee_quality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coffee Quality Dataset — coffee_quality","text":"data frame 207 rows 30 variables: country_of_origin character. country coffee originated. continent_of_origin character. continent coffee originated. farm_name character. name farm coffee grown. lot_number character. lot number assigned batch coffee. mill character. name mill coffee processed. company character. company associated coffee batch. altitude character. altitude range (meters) coffee grown. region character. specific region within country coffee grown. producer character. name coffee producer. in_country_partner character. -country partner organization associated coffee batch. harvest_year character. year range years coffee harvested. grading_date date. date coffee graded. owner character. owner coffee batch. variety character. variety coffee plant. processing_method character. method used process coffee beans. aroma numeric. aroma score coffee, scale 0 10. flavor numeric. flavor score coffee, scale 0 10. aftertaste numeric. aftertaste score coffee, scale 0 10. acidity numeric. acidity score coffee, scale 0 10. body numeric. body score coffee, scale 0 10. balance numeric. balance score coffee, scale 0 10. uniformity numeric. uniformity score coffee, scale 0 10. clean_cup numeric. clean cup score coffee, scale 0 10. sweetness numeric. sweetness score coffee, scale 0 10. overall numeric. overall score coffee, scale 0 10. total_cup_points numeric. total cup points awarded coffee, representing sum various quality metrics. moisture_percentage numeric. moisture percentage coffee beans. color character. color description coffee beans. expiration character. expiration date coffee batch. certification_body character. body certified coffee batch.","code":""},{"path":"moderndive.github.io/moderndive/reference/coffee_quality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coffee Quality Dataset — coffee_quality","text":"Coffee Quality Institute","code":""},{"path":"moderndive.github.io/moderndive/reference/coffee_ratings.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Coffee Quality Institute's review pages in January 2018 — coffee_ratings","title":"Data from the Coffee Quality Institute's review pages in January 2018 — coffee_ratings","text":"1,340 digitized reviews coffee samples https://database.coffeeinstitute.org/.","code":""},{"path":"moderndive.github.io/moderndive/reference/coffee_ratings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Coffee Quality Institute's review pages in January 2018 — coffee_ratings","text":"","code":"coffee_ratings"},{"path":"moderndive.github.io/moderndive/reference/coffee_ratings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Coffee Quality Institute's review pages in January 2018 — coffee_ratings","text":"data frame 1,340 rows representing sample coffee. total_cup_points Number points final rating (scale 0-100) species Species coffee bean plant (Arabica Robusta) owner Owner coffee plant farm country_of_origin Coffee bean's country origin farm_name Name coffee plant farm lot_number Lot number tested coffee beans mill Name coffee bean's processing facility ico_number International Coffee Organization number company Name coffee bean's company altitude Altitude coffee plants grown region Region coffee plants grown producer Name coffee bean roaster number_of_bags Number tested bags bag_weight Tested bag weight in_country_partner Partner country harvest_year Year coffee beans harvested grading_date Day coffee beans graded owner_1 Owner coffee beans variety Variety coffee beans processing_method Method used processing coffee beans aroma Coffee aroma rating flavor Coffee flavor rating aftertaste Coffee aftertaste rating acidity Coffee acidity rating body Coffee body rating balance Coffee balance rating uniformity Coffee uniformity rating clean_cup Cup cleanliness rating sweetness Coffee sweetness rating cupper_points Cupper Points, overall rating coffee moisture Coffee moisture content category_one_defects Number category one defects coffee beans quakers Number coffee beans dark brown roasted color Color coffee beans category_two_defects Number category two defects coffee beans expiration Expiration date coffee beans certification_body Entity/Institute certified coffee beans certification_address Body address certification coffee beans certification_contact Certification contact coffee beans unit_of_measurement Unit measurement altitude altitude_low_meters Lower altitude level coffee beans grow altitude_high_meters Higher altitude level coffee beans grow altitude_mean_meters Average altitude level coffee beans grow ","code":""},{"path":"moderndive.github.io/moderndive/reference/coffee_ratings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the Coffee Quality Institute's review pages in January 2018 — coffee_ratings","text":"Coffee Quality Institute. Access cleaned data available https://github.com/jldbc/coffee-quality-database","code":""},{"path":"moderndive.github.io/moderndive/reference/early_january_2023_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Early January hourly weather data for 2023 — early_january_2023_weather","title":"Early January hourly weather data for 2023 — early_january_2023_weather","text":"Hourly meteorological data LGA, JFK EWR month January 2023. subset weather data frame nycflights23.","code":""},{"path":"moderndive.github.io/moderndive/reference/early_january_2023_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Early January hourly weather data for 2023 — early_january_2023_weather","text":"","code":"early_january_2023_weather"},{"path":"moderndive.github.io/moderndive/reference/early_january_2023_weather.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Early January hourly weather data for 2023 — early_january_2023_weather","text":"data frame 360 rows representing hourly measurements 15 variables origin Weather station. Named origin facilitate merging nycflights23::flights data. year, month, day, hour Time recording. temp, dewp Temperature dewpoint F. humid Relative humidity. wind_dir, wind_speed, wind_gust Wind direction (degrees), speed gust speed (mph). precip Precipitation, inches. pressure Sea level pressure millibars. visib Visibility miles. time_hour Date hour recording POSIXct date.","code":""},{"path":"moderndive.github.io/moderndive/reference/early_january_2023_weather.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Early January hourly weather data for 2023 — early_january_2023_weather","text":"ASOS download Iowa Environmental Mesonet, https://mesonet.agron.iastate.edu/request/download.phtml.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/early_january_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Early January hourly weather data — early_january_weather","title":"Early January hourly weather data — early_january_weather","text":"Hourly meteorological data LGA, JFK EWR month January 2013. subset weather data frame nycflights13.","code":""},{"path":"moderndive.github.io/moderndive/reference/early_january_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Early January hourly weather data — early_january_weather","text":"","code":"early_january_weather"},{"path":"moderndive.github.io/moderndive/reference/early_january_weather.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Early January hourly weather data — early_january_weather","text":"data frame 358 rows representing hourly measurements 15 variables origin Weather station. Named origin facilitate merging nycflights13::flights data. year, month, day, hour Time recording. temp, dewp Temperature dewpoint F. humid Relative humidity. wind_dir, wind_speed, wind_gust Wind direction (degrees), speed gust speed (mph). precip Precipitation, inches. pressure Sea level pressure millibars. visib Visibility miles. time_hour Date hour recording POSIXct date.","code":""},{"path":"moderndive.github.io/moderndive/reference/early_january_weather.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Early January hourly weather data — early_january_weather","text":"ASOS download Iowa Environmental Mesonet, https://mesonet.agron.iastate.edu/request/download.phtml.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/envoy_flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Envoy Air flights data for 2023 — envoy_flights","title":"Envoy Air flights data for 2023 — envoy_flights","text":"-time data Envoy Air flights departed NYC (.e. JFK, LGA EWR) 2023. subset flights data frame nycflights23.","code":""},{"path":"moderndive.github.io/moderndive/reference/envoy_flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Envoy Air flights data for 2023 — envoy_flights","text":"","code":"envoy_flights"},{"path":"moderndive.github.io/moderndive/reference/envoy_flights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Envoy Air flights data for 2023 — envoy_flights","text":"data frame 357 rows representing Alaska Airlines flights 19 variables year, month, day Date departure. dep_time, arr_time Actual departure arrival times (format HHMM HMM), local tz. sched_dep_time, sched_arr_time Scheduled departure arrival times (format HHMM HMM), local tz. dep_delay, arr_delay Departure arrival delays, minutes. Negative times represent early departures/arrivals. carrier Two letter carrier abbreviation. See nycflights23::airlines get name. flight Flight number. tailnum Plane tail number. See nycflights23::planes additional metadata. origin, dest Origin destination. See nycflights23::airports additional metadata. air_time Amount time spent air, minutes. distance Distance airports, miles. hour, minute Time scheduled departure broken hour minutes. time_hour Scheduled date hour flight POSIXct date. Along origin, can used join flights data nycflights23::weather data.","code":""},{"path":"moderndive.github.io/moderndive/reference/envoy_flights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Envoy Air flights data for 2023 — envoy_flights","text":"RITA, Bureau transportation statistics","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/ev_charging.html","id":null,"dir":"Reference","previous_headings":"","what":"Electric vehicle charging sessions for a workplace charging program — ev_charging","title":"Electric vehicle charging sessions for a workplace charging program — ev_charging","text":"dataset consists information 3,395 electric vehicle charging sessions across locations workplace charging program. data contains information multiple charging sessions 85 electric vehicle drivers across 25 workplace locations, located facilities various types.","code":""},{"path":"moderndive.github.io/moderndive/reference/ev_charging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Electric vehicle charging sessions for a workplace charging program — ev_charging","text":"","code":"ev_charging"},{"path":"moderndive.github.io/moderndive/reference/ev_charging.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Electric vehicle charging sessions for a workplace charging program — ev_charging","text":"data frame 3,395 rows 24 variables, row electric vehicle charging session. session_id Unique identifier specifying electric vehicle charging session kwh_total Total energy used charging session, kilowatt hours (kWh) dollars Quantity money paid charging session U.S. dollars created Date time recorded beginning charging session ended Date time recorded end charging session start_time Hour day charging session began (1 24) end_time Hour day charging session ended (1 24) charge_time_hrs Length charging session hours weekday First three characters name weekday charging session occurred platform Digital platform driver used record session (android, ios, web) distance Distance charging location driver's home, expressed miles NA driver report address user_id Unique identifier driver station_id Unique identifier charging station location_id Unique identifier location owned company charging stations located manager_vehicle Binary variable 1 vehicle type commonly used managers firm 0 otherwise facility_type Categorical variable represents facility type: 1 = manufacturing 2 = office 3 = research development 4 =  mon, tues, wed, thurs, fri, sat, sun Binary variables; 1 charging session took place day, 0 otherwise reported_zip Binary variable; 1 driver report zip code, 0 ","code":""},{"path":"moderndive.github.io/moderndive/reference/ev_charging.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Electric vehicle charging sessions for a workplace charging program — ev_charging","text":"Harvard Dataverse doi:10.7910/DVN/NFPQLW . Note data released CC0: Public Domain license.","code":""},{"path":"moderndive.github.io/moderndive/reference/evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Teaching evaluations at the UT Austin — evals","title":"Teaching evaluations at the UT Austin — evals","text":"data gathered end semester student evaluations sample 463 courses taught 94 professors University Texas Austin. addition, six students rate professors' physical appearance. result data frame row contains different course column information either course professor https://www.openintro.org/data/index.php?data=evals","code":""},{"path":"moderndive.github.io/moderndive/reference/evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teaching evaluations at the UT Austin — evals","text":"","code":"evals"},{"path":"moderndive.github.io/moderndive/reference/evals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Teaching evaluations at the UT Austin — evals","text":"data frame 463 observations corresponding courses following 13 variables. ID Identification variable course. prof_ID Identification variable professor. Many professors included dataset. score Average professor evaluation score: (1) unsatisfactory - (5) excellent. age Age professor. bty_avg Average beauty rating professor. gender Gender professor (collected binary variable time study): female, male. ethnicity Ethnicity professor: minority, minority. language Language school professor received education: English non-English. rank Rank professor: teaching, tenure track, tenured. pic_outfit Outfit professor picture: formal, formal. pic_color Color professor’s picture: color, black & white. cls_did_eval Number students class completed evaluation. cls_students Total number students class. cls_level Class level: lower, upper.","code":""},{"path":"moderndive.github.io/moderndive/reference/evals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Teaching evaluations at the UT Austin — evals","text":"Çetinkaya-Rundel M, Morgan KL, Stangl D. 2013. Looking Good Course Evaluations. CHANCE 26(2).","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/geom_categorical_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression model with one categorical explanatory/predictor variable — geom_categorical_model","title":"Regression model with one categorical explanatory/predictor variable — geom_categorical_model","text":"geom_categorical_model() fits regression model using categorical x axis explanatory variable, visualizes model's fitted values piece-wise horizontal line segments. Confidence interval bands can included visualization model. Like geom_parallel_slopes(), function nature geom_smooth() ggplot2 package, provides functionality geom_smooth() currently . using categorical predictor variable, intercept corresponds mean baseline group, coefficients non-baseline groups offsets baseline. Thus visualization baseline comparison group's median marked solid line, whereas offset groups' medians marked dashed lines.","code":""},{"path":"moderndive.github.io/moderndive/reference/geom_categorical_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression model with one categorical explanatory/predictor variable — geom_categorical_model","text":"","code":"geom_categorical_model(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   se = TRUE,   level = 0.95,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"moderndive.github.io/moderndive/reference/geom_categorical_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression model with one categorical explanatory/predictor variable — geom_categorical_model","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. se Display confidence interval around model lines? TRUE default. level Level confidence interval use (0.95 default). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/geom_categorical_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression model with one categorical explanatory/predictor variable — geom_categorical_model","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(ggplot2)  p <- ggplot(mpg, aes(x = drv, y = hwy)) +   geom_point() +   geom_categorical_model() p   # In the above visualization, the solid line corresponds to the mean of 19.2 # for the baseline group \"4\", whereas the dashed lines correspond to the # means of 28.19 and 21.02 for the non-baseline groups \"f\" and \"r\" respectively. # In the corresponding regression table however the coefficients for \"f\" and \"r\" # are presented as offsets from the mean for \"4\": model <- lm(hwy ~ drv, data = mpg) get_regression_table(model) #> # A tibble: 3 × 7 #>   term      estimate std_error statistic p_value lower_ci upper_ci #>   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> #> 1 intercept    19.2      0.404     47.5    0       18.4      20.0  #> 2 drv-f         8.99     0.567     15.9    0        7.87     10.1  #> 3 drv-r         1.82     0.913      2.00   0.047    0.026     3.62  # You can use different colors for each categorical level p %+% aes(color = drv) #> Warning: <ggplot> %+% x was deprecated in ggplot2 4.0.0. #> ℹ Please use <ggplot> + x instead.   # But mapping the color aesthetic doesn't change the model that is fit p %+% aes(color = class)"},{"path":"moderndive.github.io/moderndive/reference/geom_parallel_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel slopes regression model — geom_parallel_slopes","title":"Parallel slopes regression model — geom_parallel_slopes","text":"geom_parallel_slopes() fits parallel slopes model adds line output(s) ggplot object. Basically, fits unified model intercepts varying groups (supplied standard {ggplot2} grouping aesthetics: group, color, fill, etc.). function nature geom_smooth() {ggplot2} package, provides functionality geom_smooth() currently .","code":""},{"path":"moderndive.github.io/moderndive/reference/geom_parallel_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel slopes regression model — geom_parallel_slopes","text":"","code":"geom_parallel_slopes(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   se = TRUE,   formula = y ~ x,   n = 100,   fullrange = FALSE,   level = 0.95,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"moderndive.github.io/moderndive/reference/geom_parallel_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel slopes regression model — geom_parallel_slopes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. se Display confidence interval around model lines? TRUE default. formula Formula use per group parallel slopes model. Basic linear y ~ x default. n Number points per group evaluate model. fullrange TRUE, smoothing line gets expanded range plot, potentially beyond data. extend line additional padding created expansion. level Level confidence interval use (0.95 default). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/geom_parallel_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel slopes regression model — geom_parallel_slopes","text":"","code":"library(dplyr) library(ggplot2)  ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE)   # Basic usage ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes()  ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE)   # Supply custom aesthetics ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE, size = 4) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead.   # Fit non-linear model example_df <- house_prices %>%   slice(1:1000) %>%   mutate(     log10_price = log10(price),     log10_size = log10(sqft_living)   ) ggplot(example_df, aes(x = log10_size, y = log10_price, color = condition)) +   geom_point(alpha = 0.1) +   geom_parallel_slopes(formula = y ~ poly(x, 2))   # Different grouping ggplot(example_df, aes(x = log10_size, y = log10_price)) +   geom_point(alpha = 0.1) +   geom_parallel_slopes(aes(fill = condition))"},{"path":"moderndive.github.io/moderndive/reference/get_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get correlation value in a tidy way — get_correlation","title":"Get correlation value in a tidy way — get_correlation","text":"Determine Pearson correlation coefficient two variables data frame using pipeable formula-friendly syntax","code":""},{"path":"moderndive.github.io/moderndive/reference/get_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get correlation value in a tidy way — get_correlation","text":"","code":"get_correlation(data, formula, na.rm = FALSE, ...)"},{"path":"moderndive.github.io/moderndive/reference/get_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get correlation value in a tidy way — get_correlation","text":"data data frame object formula formula response variable name left explanatory variable name right na.rm logical value indicating whether NA values stripped computation proceeds. ... arguments passed stats::cor()","code":""},{"path":"moderndive.github.io/moderndive/reference/get_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get correlation value in a tidy way — get_correlation","text":"1x1 data frame storing correlation value","code":""},{"path":"moderndive.github.io/moderndive/reference/get_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get correlation value in a tidy way — get_correlation","text":"","code":"library(moderndive)  # Compute correlation between mpg and cyl: mtcars %>%   get_correlation(formula = mpg ~ cyl) #>         cor #> 1 -0.852162  # Group by one variable: library(dplyr) mtcars %>%   group_by(am) %>%   get_correlation(formula = mpg ~ cyl) #> # A tibble: 2 × 2 #>      am    cor #>   <dbl>  <dbl> #> 1     0 -0.796 #> 2     1 -0.826  # Group by two variables: mtcars %>%   group_by(am, gear) %>%   get_correlation(formula = mpg ~ cyl) #> # A tibble: 4 × 3 #> # Groups:   am [2] #>      am  gear    cor #>   <dbl> <dbl>  <dbl> #> 1     0     3 -0.645 #> 2     0     4 -0.959 #> 3     1     4 -0.601 #> 4     1     5 -0.961"},{"path":"moderndive.github.io/moderndive/reference/get_regression_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Get regression points — get_regression_points","title":"Get regression points — get_regression_points","text":"Output information point/observation used lm() regression \"tidy\" format. function wrapper function broom::augment() renames variables intuitive names.","code":""},{"path":"moderndive.github.io/moderndive/reference/get_regression_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get regression points — get_regression_points","text":"","code":"get_regression_points(   model,   digits = 3,   print = FALSE,   newdata = NULL,   ID = NULL )"},{"path":"moderndive.github.io/moderndive/reference/get_regression_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get regression points — get_regression_points","text":"model lm() model object digits number digits precision output table print TRUE, return print format suitable R Markdown newdata new data frame points/observations apply model obtain new fitted values /predicted values y-hat. Note format newdata must match format original data used fit model. ID string indicating variable either original data used fit model newdata used identification variable distinguish observational units row. variable left-variable output data frame. ID unspecified, column ID values 1 number rows returned identification variable.","code":""},{"path":"moderndive.github.io/moderndive/reference/get_regression_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get regression points — get_regression_points","text":"tibble-formatted regression table outcome/response variable, explanatory/predictor variables, fitted/predicted value, residual.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/get_regression_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get regression points — get_regression_points","text":"","code":"library(dplyr) library(tibble)  # Convert rownames to column mtcars <- mtcars %>%   rownames_to_column(var = \"automobile\")  # Fit lm() regression: mpg_model <- lm(mpg ~ cyl, data = mtcars)  # Get information on all points in regression: get_regression_points(mpg_model, ID = \"automobile\") #> # A tibble: 32 × 5 #>    automobile          mpg   cyl mpg_hat residual #>    <chr>             <dbl> <dbl>   <dbl>    <dbl> #>  1 Mazda RX4          21       6    20.6    0.37  #>  2 Mazda RX4 Wag      21       6    20.6    0.37  #>  3 Datsun 710         22.8     4    26.4   -3.58  #>  4 Hornet 4 Drive     21.4     6    20.6    0.77  #>  5 Hornet Sportabout  18.7     8    14.9    3.82  #>  6 Valiant            18.1     6    20.6   -2.53  #>  7 Duster 360         14.3     8    14.9   -0.578 #>  8 Merc 240D          24.4     4    26.4   -1.98  #>  9 Merc 230           22.8     4    26.4   -3.58  #> 10 Merc 280           19.2     6    20.6   -1.43  #> # ℹ 22 more rows  # Create training and test set based on mtcars: training_set <- mtcars %>%   sample_frac(0.5) test_set <- mtcars %>%   anti_join(training_set, by = \"automobile\")  # Fit model to training set: mpg_model_train <- lm(mpg ~ cyl, data = training_set)  # Make predictions on test set: get_regression_points(mpg_model_train, newdata = test_set, ID = \"automobile\") #> # A tibble: 16 × 5 #>    automobile            mpg   cyl mpg_hat residual #>    <chr>               <dbl> <dbl>   <dbl>    <dbl> #>  1 Mazda RX4            21       6    20.4    0.629 #>  2 Datsun 710           22.8     4    25.8   -2.96  #>  3 Duster 360           14.3     8    15.0   -0.684 #>  4 Merc 240D            24.4     4    25.8   -1.36  #>  5 Merc 280             19.2     6    20.4   -1.17  #>  6 Merc 450SLC          15.2     8    15.0    0.216 #>  7 Lincoln Continental  10.4     8    15.0   -4.58  #>  8 Chrysler Imperial    14.7     8    15.0   -0.284 #>  9 Fiat 128             32.4     4    25.8    6.64  #> 10 Honda Civic          30.4     4    25.8    4.64  #> 11 Toyota Corolla       33.9     4    25.8    8.14  #> 12 Toyota Corona        21.5     4    25.8   -4.26  #> 13 Pontiac Firebird     19.2     8    15.0    4.22  #> 14 Fiat X1-9            27.3     4    25.8    1.54  #> 15 Ford Pantera L       15.8     8    15.0    0.816 #> 16 Volvo 142E           21.4     4    25.8   -4.36"},{"path":"moderndive.github.io/moderndive/reference/get_regression_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get regression summary values — get_regression_summaries","title":"Get regression summary values — get_regression_summaries","text":"Output scalar summary statistics lm() regression \"tidy\" format. function wrapper function broom::glance().","code":""},{"path":"moderndive.github.io/moderndive/reference/get_regression_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get regression summary values — get_regression_summaries","text":"","code":"get_regression_summaries(model, digits = 3, print = FALSE)"},{"path":"moderndive.github.io/moderndive/reference/get_regression_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get regression summary values — get_regression_summaries","text":"model lm() model object digits number digits precision output table print TRUE, return print format suitable R Markdown","code":""},{"path":"moderndive.github.io/moderndive/reference/get_regression_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get regression summary values — get_regression_summaries","text":"single-row tibble regression summaries. Ex: r_squared mse.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/get_regression_summaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get regression summary values — get_regression_summaries","text":"","code":"library(moderndive)  # Fit lm() regression: mpg_model <- lm(mpg ~ cyl, data = mtcars)  # Get regression summaries: get_regression_summaries(mpg_model) #> # A tibble: 1 × 9 #>   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df  nobs #>       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> <dbl> #> 1     0.726         0.717  9.64  3.10  3.21      79.6       0     1    32"},{"path":"moderndive.github.io/moderndive/reference/get_regression_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get regression table — get_regression_table","title":"Get regression table — get_regression_table","text":"Output regression table lm() regression \"tidy\" format. function wrapper function broom::tidy() includes confidence intervals output table default.","code":""},{"path":"moderndive.github.io/moderndive/reference/get_regression_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get regression table — get_regression_table","text":"","code":"get_regression_table(   model,   conf.level = 0.95,   digits = 3,   print = FALSE,   default_categorical_levels = FALSE )"},{"path":"moderndive.github.io/moderndive/reference/get_regression_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get regression table — get_regression_table","text":"model lm() model object conf.level confidence level use confidence interval conf.int = TRUE. Must strictly greater 0 less 1. Defaults 0.95, corresponds 95 percent confidence interval. digits number digits precision output table print TRUE, return print format suitable R Markdown default_categorical_levels TRUE, change non-baseline categorical variables term column. Otherwise non-baseline categorical variables displayed format \"categorical_variable_name: level_name\"","code":""},{"path":"moderndive.github.io/moderndive/reference/get_regression_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get regression table — get_regression_table","text":"tibble-formatted regression table along lower upper end points confidence intervals parameters lower_ci upper_ci; confidence levels default 95\\","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/get_regression_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get regression table — get_regression_table","text":"","code":"library(moderndive)  # Fit lm() regression: mpg_model <- lm(mpg ~ cyl, data = mtcars)  # Get regression table: get_regression_table(mpg_model) #> # A tibble: 2 × 7 #>   term      estimate std_error statistic p_value lower_ci upper_ci #>   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> #> 1 intercept    37.9      2.07      18.3        0    33.6     42.1  #> 2 cyl          -2.88     0.322     -8.92       0    -3.53    -2.22  # Vary confidence level of confidence intervals get_regression_table(mpg_model, conf.level = 0.99) #> # A tibble: 2 × 7 #>   term      estimate std_error statistic p_value lower_ci upper_ci #>   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> #> 1 intercept    37.9      2.07      18.3        0    32.2     43.6  #> 2 cyl          -2.88     0.322     -8.92       0    -3.76    -1.99"},{"path":"moderndive.github.io/moderndive/reference/gg_parallel_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot parallel slopes model — gg_parallel_slopes","title":"Plot parallel slopes model — gg_parallel_slopes","text":"NOTE: function deprecated; please use geom_parallel_slopes() instead. Output visualization linear regression one numerical one categorical explanatory/predictor variable: separate colored regression line level categorical variable","code":""},{"path":"moderndive.github.io/moderndive/reference/gg_parallel_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot parallel slopes model — gg_parallel_slopes","text":"","code":"gg_parallel_slopes(y, num_x, cat_x, data, alpha = 1)"},{"path":"moderndive.github.io/moderndive/reference/gg_parallel_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot parallel slopes model — gg_parallel_slopes","text":"y Character string outcome variable data num_x Character string numerical explanatory/predictor variable data cat_x Character string categorical explanatory/predictor variable data data optional data frame, list environment (object     coercible .data.frame data frame) containing     variables model.  found data,     variables taken environment(formula),     typically environment lm called. alpha Transparency points","code":""},{"path":"moderndive.github.io/moderndive/reference/gg_parallel_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot parallel slopes model — gg_parallel_slopes","text":"ggplot2::ggplot() object.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/gg_parallel_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot parallel slopes model — gg_parallel_slopes","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) library(dplyr) library(moderndive)  # log10() transformations house_prices <- house_prices %>%   mutate(     log10_price = log10(price),     log10_size = log10(sqft_living)   )  # Output parallel slopes model plot: gg_parallel_slopes(   y = \"log10_price\", num_x = \"log10_size\", cat_x = \"condition\",   data = house_prices, alpha = 0.1 ) +   labs(     x = \"log10 square feet living space\", y = \"log10 price in USD\",     title = \"House prices in Seattle: Parallel slopes model\"   )  # Compare with interaction model plot: ggplot(house_prices, aes(x = log10_size, y = log10_price, col = condition)) +   geom_point(alpha = 0.1) +   geom_smooth(method = \"lm\", se = FALSE, size = 1) +   labs(     x = \"log10 square feet living space\", y = \"log10 price in USD\",     title = \"House prices in Seattle: Interaction model\"   ) } # }"},{"path":"moderndive.github.io/moderndive/reference/house_prices.html","id":null,"dir":"Reference","previous_headings":"","what":"House Sales in King County, USA — house_prices","title":"House Sales in King County, USA — house_prices","text":"dataset contains house sale prices King County, includes Seattle. includes homes sold May 2014 May 2015. dataset obtained Kaggle.com https://www.kaggle.com/harlfoxem/housesalesprediction/data","code":""},{"path":"moderndive.github.io/moderndive/reference/house_prices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"House Sales in King County, USA — house_prices","text":"","code":"house_prices"},{"path":"moderndive.github.io/moderndive/reference/house_prices.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"House Sales in King County, USA — house_prices","text":"data frame 21613 observations following 21 variables. id notation house date Date house sold price Price prediction target bedrooms Number Bedrooms/House bathrooms Number bathrooms/bedrooms sqft_living square footage home sqft_lot square footage lot floors Total floors (levels) house waterfront House view waterfront view viewed condition good condition (Overall) grade overall grade given housing unit, based King County grading system sqft_above square footage house apart basement sqft_basement square footage basement yr_built Built Year yr_renovated Year house renovated zipcode zip code lat Latitude coordinate long Longitude coordinate sqft_living15 Living room area 2015 (implies– renovations) might might affected lotsize area sqft_lot15 lotSize area 2015 (implies– renovations)","code":""},{"path":"moderndive.github.io/moderndive/reference/house_prices.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"House Sales in King County, USA — house_prices","text":"Kaggle https://www.kaggle.com/harlfoxem/housesalesprediction. Note data released CC0: Public Domain license.","code":""},{"path":"moderndive.github.io/moderndive/reference/ipf_lifts.html","id":null,"dir":"Reference","previous_headings":"","what":"International Power Lifting Results A subset of international powerlifting results. — ipf_lifts","title":"International Power Lifting Results A subset of international powerlifting results. — ipf_lifts","text":"International Power Lifting Results subset international powerlifting results.","code":""},{"path":"moderndive.github.io/moderndive/reference/ipf_lifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"International Power Lifting Results A subset of international powerlifting results. — ipf_lifts","text":"","code":"ipf_lifts"},{"path":"moderndive.github.io/moderndive/reference/ipf_lifts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"International Power Lifting Results A subset of international powerlifting results. — ipf_lifts","text":"data frame 41,152 entries, one entry individual lifter name Individual lifter name sex Binary sex (M/F) event type competition lifter entered equipment equipment category lifts performed age age lifter start date meet age_class age class filter falls division division competition bodyweight_kg recorded bodyweight lifter time competition, two decimal places weight_class_kg weight class lifter competed, two decimal places best3squat_kg Maximum first three successful attempts lift best3bench_kg Maximum first three successful attempts lift best3deadlift_kg Maximum first three successful attempts lift place recorded place lifter given division end meet date Date event federation federation hosted meet meet_name name meet","code":""},{"path":"moderndive.github.io/moderndive/reference/ipf_lifts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"International Power Lifting Results A subset of international powerlifting results. — ipf_lifts","text":"data subset open dataset Open Powerlifting","code":""},{"path":"moderndive.github.io/moderndive/reference/ma_traffic_2020_vs_2019.html","id":null,"dir":"Reference","previous_headings":"","what":"Massachusetts 2020 vs. 2019 Traffic Data Comparison — ma_traffic_2020_vs_2019","title":"Massachusetts 2020 vs. 2019 Traffic Data Comparison — ma_traffic_2020_vs_2019","text":"dataset contains information changes speed, volume, accidents traffic 2020 2019 community class road Massachusetts.","code":""},{"path":"moderndive.github.io/moderndive/reference/ma_traffic_2020_vs_2019.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Massachusetts 2020 vs. 2019 Traffic Data Comparison — ma_traffic_2020_vs_2019","text":"","code":"ma_traffic_2020_vs_2019"},{"path":"moderndive.github.io/moderndive/reference/ma_traffic_2020_vs_2019.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Massachusetts 2020 vs. 2019 Traffic Data Comparison — ma_traffic_2020_vs_2019","text":"data frame 264 rows representing different community Massachusetts. community City Town functional_class Class group road belongs change_in_speed Average estimated Speed (mph) change_in_volume Average traffic change_in_accidents Average number accidents","code":""},{"path":"moderndive.github.io/moderndive/reference/ma_traffic_2020_vs_2019.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Massachusetts 2020 vs. 2019 Traffic Data Comparison — ma_traffic_2020_vs_2019","text":"https://massdot-impact-crashes-vhb.opendata.arcgis.com/datasets/MassDOT::2020-vehicle-level-crash-details/explore https://mhd.public.ms2soft.com/tcds/tsearch.asp?loc=Mhd&mod=","code":""},{"path":"moderndive.github.io/moderndive/reference/mario_kart_auction.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from Mario Kart Ebay auctions — mario_kart_auction","title":"Data from Mario Kart Ebay auctions — mario_kart_auction","text":"Ebay auction data Nintendo Wii game Mario Kart.","code":""},{"path":"moderndive.github.io/moderndive/reference/mario_kart_auction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from Mario Kart Ebay auctions — mario_kart_auction","text":"","code":"mario_kart_auction"},{"path":"moderndive.github.io/moderndive/reference/mario_kart_auction.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from Mario Kart Ebay auctions — mario_kart_auction","text":"data frame 143 auctions. id Auction ID assigned Ebay duration Auction length days n_bids Number bids cond Game condition, either new used start_pr Price start auction ship_pr Shipping price total_pr Total price, equal auction price plus shipping price ship_sp Shipping speed method seller_rate Seller's rating Ebay, equal number positive ratings minus number negative ratings stock_photo Whether auction photo stock photo , pictures used many options considered stock photos wheels Number Wii wheels included auction title title auctions","code":""},{"path":"moderndive.github.io/moderndive/reference/mario_kart_auction.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from Mario Kart Ebay auctions — mario_kart_auction","text":"data https://www.openintro.org/data/index.php?data=mariokart","code":""},{"path":"moderndive.github.io/moderndive/reference/mass_traffic_2020.html","id":null,"dir":"Reference","previous_headings":"","what":"2020 road traffic volume and crash level date for 13 Massachusetts counties — mass_traffic_2020","title":"2020 road traffic volume and crash level date for 13 Massachusetts counties — mass_traffic_2020","text":"2020 road traffic volume crash level date 13 Massachusetts counties","code":""},{"path":"moderndive.github.io/moderndive/reference/mass_traffic_2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2020 road traffic volume and crash level date for 13 Massachusetts counties — mass_traffic_2020","text":"","code":"mass_traffic_2020"},{"path":"moderndive.github.io/moderndive/reference/mass_traffic_2020.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"2020 road traffic volume and crash level date for 13 Massachusetts counties — mass_traffic_2020","text":"data frame 874 rows representing traffic data 874 sites site_id Site id county County site located community Community site located rural_urban Rural (R) Urban (U) dir Direction traffic movement. Either 1-WAY, 2-WAY, EB (eastbound), RAMP WB (westbound) functional_class Classification road. Either Arterial, Collector, Freeway & Expressway, Interstate Local Road avg_speed Average traffic speed total_volume Number vehicles recorded site 2020 crashes Number vehicle crashes site nonfatal_injuries Number non-fatal injuries recorded vehicle crashes fatal_injuries Number fatal injuries recorded vehicle crashes","code":""},{"path":"moderndive.github.io/moderndive/reference/moderndive.html","id":null,"dir":"Reference","previous_headings":"","what":"moderndive - Tidyverse-Friendly Introductory Linear Regression — moderndive","title":"moderndive - Tidyverse-Friendly Introductory Linear Regression — moderndive","text":"Datasets wrapper functions tidyverse-friendly introductory linear regression, used \"Statistical Inference via Data Science: ModernDive R tidyverse\" available https://moderndive.com/.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/moderndive.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"moderndive - Tidyverse-Friendly Introductory Linear Regression — moderndive","text":"Maintainer: Albert Y. Kim albert.ys.kim@gmail.com (ORCID) Authors: Chester Ismay chester.ismay@gmail.com (ORCID) contributors: Andrew Bray abray@reed.edu (ORCID) [contributor] Delaney Moran delaneyemoran@gmail.com [contributor] Evgeni Chasnovski evgeni.chasnovski@gmail.com (ORCID) [contributor] Hopper wjhopper510@gmail.com (ORCID) [contributor] Benjamin S. Baumer ben.baumer@gmail.com (ORCID) [contributor] Marium Tapal mariumtapal@gmail.com (ORCID) [contributor] Wayne Ndlovu waynedndlovu5@gmail.com [contributor] Catherine Peppers cpeppers@smith.edu [contributor] Annah Mutaya annahmutaya18@gmail.com [contributor] Anushree Goswami anushreeegoswami@gmail.com [contributor] Ziyue Yang zyang2k@gmail.com (ORCID) [contributor] Clara Li clarasepianli@gmail.com (ORCID) [contributor] Caroline McKenna carolinemckenna101@gmail.com [contributor] Catherine Park jcathyp@gmail.com (ORCID) [contributor] Abbie Benfield abbidabbers@gmail.com [contributor] Georgia Gans georgiagans@live.com [contributor] Kacey Jean-Jacques kjeanjacques@smith.edu [contributor] Swaha Bhattacharya itsswahabhattacharya@gmail.com [contributor] Vivian Almaraz viviansofia101@gmail.com [contributor] Elle Jo Whalen ewhalen@smith.edu [contributor] Jacqueline Chen jchen76@smith.edu [contributor] Michelle Flesaker mflesaker@smith.edu [contributor] Irene Foster ifoster25@smith.edu [contributor] Aushanae Haller aushanaenhaller@gmail.com [contributor] Benjamin Bruncati kbruncati@smith.edu (ORCID) [contributor] Quinn White quinnarlise@gmail.com (ORCID) [contributor] Tianshu Zhang tzhang26@smith.edu (ORCID) [contributor] Katelyn Diaz katndiaz@gmail.com (ORCID) [contributor] Rose Porta rporta@smith.edu [contributor] Renee Wu rwu30@smith.edu [contributor] Arris Moise amoise@smith.edu [contributor] Kate Phan kphan@smith.edu [contributor] Grace Hartley grace.hartley@gmail.com [contributor] Silas Weden silasweden@gmail.com [contributor] Emma Vejcik evejcik@gmail.com [contributor] Nikki Schuldt nikkischuldt@gmail.com [contributor] Tess Goldmann tessgoldmann@aol.com [contributor] Hongtong Lin cccynthialht@gmail.com [contributor] Alejandra Munoz amunozgarcia@smith.edu [contributor] Elina Gordon-Halpern egordonhalpern@smith.edu [contributor] Haley Schmidt heschmidt00@gmail.com (ORCID) [contributor]","code":""},{"path":"moderndive.github.io/moderndive/reference/moderndive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"moderndive - Tidyverse-Friendly Introductory Linear Regression — moderndive","text":"","code":"library(moderndive)  # Fit regression model: mpg_model <- lm(mpg ~ hp, data = mtcars)  # Regression tables: get_regression_table(mpg_model) #> # A tibble: 2 × 7 #>   term      estimate std_error statistic p_value lower_ci upper_ci #>   <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl> #> 1 intercept   30.1        1.63     18.4        0   26.8     33.4   #> 2 hp          -0.068      0.01     -6.74       0   -0.089   -0.048  # Information on each point in a regression: get_regression_points(mpg_model) #> # A tibble: 32 × 5 #>       ID   mpg    hp mpg_hat residual #>    <int> <dbl> <dbl>   <dbl>    <dbl> #>  1     1  21     110    22.6   -1.59  #>  2     2  21     110    22.6   -1.59  #>  3     3  22.8    93    23.8   -0.954 #>  4     4  21.4   110    22.6   -1.19  #>  5     5  18.7   175    18.2    0.541 #>  6     6  18.1   105    22.9   -4.84  #>  7     7  14.3   245    13.4    0.917 #>  8     8  24.4    62    25.9   -1.47  #>  9     9  22.8    95    23.6   -0.817 #> 10    10  19.2   123    21.7   -2.51  #> # ℹ 22 more rows  # Regression summaries get_regression_summaries(mpg_model) #> # A tibble: 1 × 9 #>   r_squared adj_r_squared   mse  rmse sigma statistic p_value    df  nobs #>       <dbl>         <dbl> <dbl> <dbl> <dbl>     <dbl>   <dbl> <dbl> <dbl> #> 1     0.602         0.589  14.0  3.74  3.86      45.5       0     1    32  # Plotting parallel slopes models library(ggplot2) ggplot(evals, aes(x = age, y = score, color = ethnicity)) +   geom_point() +   geom_parallel_slopes(se = FALSE)"},{"path":"moderndive.github.io/moderndive/reference/movies_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Random sample of 68 action and romance movies — movies_sample","title":"Random sample of 68 action and romance movies — movies_sample","text":"random sample 32 action movies 36 romance movies https://www.imdb.com/ ratings.","code":""},{"path":"moderndive.github.io/moderndive/reference/movies_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random sample of 68 action and romance movies — movies_sample","text":"","code":"movies_sample"},{"path":"moderndive.github.io/moderndive/reference/movies_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random sample of 68 action and romance movies — movies_sample","text":"data frame 68 rows movies. title Movie title year Year released rating IMDb rating 10 stars genre Action Romance","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/mythbusters_yawn.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from Mythbusters' study on contagiousness of yawning — mythbusters_yawn","title":"Data from Mythbusters' study on contagiousness of yawning — mythbusters_yawn","text":"study whether yawning contagious https://www.imdb.com/title/tt0768479/. data derived final proportions yawns given show.","code":""},{"path":"moderndive.github.io/moderndive/reference/mythbusters_yawn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from Mythbusters' study on contagiousness of yawning — mythbusters_yawn","text":"","code":"mythbusters_yawn"},{"path":"moderndive.github.io/moderndive/reference/mythbusters_yawn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from Mythbusters' study on contagiousness of yawning — mythbusters_yawn","text":"data frame 50 rows representing 50 participants study. subj integer value corresponding identifier variable subject ID group string either \"seed\", participant shown yawner, \"control\", participant shown yawner yawn string either \"yes\", participant yawned, \"\", participant yawn","code":""},{"path":"moderndive.github.io/moderndive/reference/old_faithful_2024.html","id":null,"dir":"Reference","previous_headings":"","what":"Old Faithful Eruptions Dataset (2024) — old_faithful_2024","title":"Old Faithful Eruptions Dataset (2024) — old_faithful_2024","text":"dataset contains records eruptions Old Faithful geyser Yellowstone National Park, recorded 2024. includes details eruption ID, date time eruption, waiting time eruptions, webcam availability, duration eruption.","code":""},{"path":"moderndive.github.io/moderndive/reference/old_faithful_2024.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Old Faithful Eruptions Dataset (2024) — old_faithful_2024","text":"","code":"old_faithful_2024"},{"path":"moderndive.github.io/moderndive/reference/old_faithful_2024.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Old Faithful Eruptions Dataset (2024) — old_faithful_2024","text":"data frame 114 rows 6 variables: eruption_id numeric. unique identifier eruption. date date. date eruption. time numeric. time eruption HHMM format (e.g., 538 corresponds 5:38 , 1541 corresponds 3:41 PM). waiting numeric. waiting time minutes next eruption. webcam character. Indicates whether eruption captured webcam (\"Yes\" \"\"). duration numeric. duration eruption seconds.","code":""},{"path":"moderndive.github.io/moderndive/reference/old_faithful_2024.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Old Faithful Eruptions Dataset (2024) — old_faithful_2024","text":"Volunteer information https://geysertimes.org/retrieve.php","code":""},{"path":"moderndive.github.io/moderndive/reference/orig_pennies_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"A random sample of 40 pennies sampled from the pennies data frame — orig_pennies_sample","title":"A random sample of 40 pennies sampled from the pennies data frame — orig_pennies_sample","text":"dataset 40 pennies treated random sample pennies() acting population. Data pennies recorded 2011.","code":""},{"path":"moderndive.github.io/moderndive/reference/orig_pennies_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A random sample of 40 pennies sampled from the pennies data frame — orig_pennies_sample","text":"","code":"orig_pennies_sample"},{"path":"moderndive.github.io/moderndive/reference/orig_pennies_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A random sample of 40 pennies sampled from the pennies data frame — orig_pennies_sample","text":"data frame 40 rows representing 40 randomly sampled pennies pennies() 2 variables year Year minting age_in_2011 Age 2011","code":""},{"path":"moderndive.github.io/moderndive/reference/orig_pennies_sample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A random sample of 40 pennies sampled from the pennies data frame — orig_pennies_sample","text":"StatCrunch https://www.statcrunch.com:443/app/index.html?dataid=301596","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/pennies.html","id":null,"dir":"Reference","previous_headings":"","what":"A population of 800 pennies sampled in 2011 — pennies","title":"A population of 800 pennies sampled in 2011 — pennies","text":"dataset 800 pennies treated sampling population. Data pennies recorded 2011.","code":""},{"path":"moderndive.github.io/moderndive/reference/pennies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A population of 800 pennies sampled in 2011 — pennies","text":"","code":"pennies"},{"path":"moderndive.github.io/moderndive/reference/pennies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A population of 800 pennies sampled in 2011 — pennies","text":"data frame 800 rows representing different pennies 2 variables year Year minting age_in_2011 Age 2011","code":""},{"path":"moderndive.github.io/moderndive/reference/pennies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A population of 800 pennies sampled in 2011 — pennies","text":"StatCrunch https://www.statcrunch.com:443/app/index.html?dataid=301596","code":""},{"path":"moderndive.github.io/moderndive/reference/pennies_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap resamples of a sample of 50 pennies — pennies_resamples","title":"Bootstrap resamples of a sample of 50 pennies — pennies_resamples","text":"35 bootstrap resamples replacement sample 50 pennies contained 50 cent roll Florence Bank Friday February 1, 2019 downtown Northampton, Massachusetts, USA https://goo.gl/maps/AF88fpvVfm12. original sample 50 pennies available pennies_sample() .","code":""},{"path":"moderndive.github.io/moderndive/reference/pennies_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap resamples of a sample of 50 pennies — pennies_resamples","text":"","code":"pennies_resamples"},{"path":"moderndive.github.io/moderndive/reference/pennies_resamples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bootstrap resamples of a sample of 50 pennies — pennies_resamples","text":"data frame 1750 rows representing 35 students' bootstrap resamples size 50 3 variables replicate ID variable replicate/resample number. name Name student year Year resampled penny","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/pennies_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample of 50 pennies — pennies_sample","title":"A sample of 50 pennies — pennies_sample","text":"sample 50 pennies contained 50 cent roll Florence Bank Friday February 1, 2019 downtown Northampton, Massachusetts, USA https://goo.gl/maps/AF88fpvVfm12.","code":""},{"path":"moderndive.github.io/moderndive/reference/pennies_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample of 50 pennies — pennies_sample","text":"","code":"pennies_sample"},{"path":"moderndive.github.io/moderndive/reference/pennies_sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample of 50 pennies — pennies_sample","text":"data frame 50 rows representing 50 sampled pennies 2 variables ID Variable used uniquely identify penny. year Year minting.","code":""},{"path":"moderndive.github.io/moderndive/reference/pennies_sample.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A sample of 50 pennies — pennies_sample","text":"original pennies_sample renamed orig_pennies_sample() moderndive v0.3.0.","code":""},{"path":"moderndive.github.io/moderndive/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"moderndive.github.io/moderndive/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"moderndive.github.io/moderndive/reference/pop_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Population Standard Deviation — pop_sd","title":"Calculate Population Standard Deviation — pop_sd","text":"function calculates population standard deviation numeric vector.","code":""},{"path":"moderndive.github.io/moderndive/reference/pop_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Population Standard Deviation — pop_sd","text":"","code":"pop_sd(x)"},{"path":"moderndive.github.io/moderndive/reference/pop_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Population Standard Deviation — pop_sd","text":"x numeric vector population standard deviation calculated.","code":""},{"path":"moderndive.github.io/moderndive/reference/pop_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Population Standard Deviation — pop_sd","text":"numeric value representing population standard deviation vector.","code":""},{"path":"moderndive.github.io/moderndive/reference/pop_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Population Standard Deviation — pop_sd","text":"","code":"# Example usage: library(dplyr) df <- data.frame(weight = c(2, 4, 6, 8, 10)) df |>    summarize(population_mean = mean(weight),              population_sd = pop_sd(weight)) #>   population_mean population_sd #> 1               6      2.828427"},{"path":"moderndive.github.io/moderndive/reference/promotions.html","id":null,"dir":"Reference","previous_headings":"","what":"Bank manager recommendations based on (binary) gender — promotions","title":"Bank manager recommendations based on (binary) gender — promotions","text":"Data 1970's study whether gender influences hiring recommendations. Originally used OpenIntro.org.","code":""},{"path":"moderndive.github.io/moderndive/reference/promotions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bank manager recommendations based on (binary) gender — promotions","text":"","code":"promotions"},{"path":"moderndive.github.io/moderndive/reference/promotions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bank manager recommendations based on (binary) gender — promotions","text":"data frame 48 observations following 3 variables. id Identification variable used distinguish rows. gender gender (collected binary variable time study): factor two levels male female decision factor two levels: promoted ","code":""},{"path":"moderndive.github.io/moderndive/reference/promotions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bank manager recommendations based on (binary) gender — promotions","text":"Rosen B Jerdee T. 1974. Influence sex role stereotypes personnel decisions. Journal Applied Psychology 59(1):9-14.","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/promotions_shuffled.html","id":null,"dir":"Reference","previous_headings":"","what":"One permutation/shuffle of promotions — promotions_shuffled","title":"One permutation/shuffle of promotions — promotions_shuffled","text":"Shuffled/permuted data 1970's study whether gender influences hiring recommendations.","code":""},{"path":"moderndive.github.io/moderndive/reference/promotions_shuffled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One permutation/shuffle of promotions — promotions_shuffled","text":"","code":"promotions_shuffled"},{"path":"moderndive.github.io/moderndive/reference/promotions_shuffled.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One permutation/shuffle of promotions — promotions_shuffled","text":"data frame 48 observations following 3 variables. id Identification variable used distinguish rows. gender shuffled/permuted (binary) gender: factor two levels male female decision factor two levels: promoted ","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. infer rep_sample_n, rep_slice_sample","code":""},{"path":"moderndive.github.io/moderndive/reference/saratoga_houses.html","id":null,"dir":"Reference","previous_headings":"","what":"House Prices and Properties in Saratoga, New York — saratoga_houses","title":"House Prices and Properties in Saratoga, New York — saratoga_houses","text":"Random sample 1057 houses taken full Saratoga Housing Data (De Veaux)","code":""},{"path":"moderndive.github.io/moderndive/reference/saratoga_houses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"House Prices and Properties in Saratoga, New York — saratoga_houses","text":"","code":"saratoga_houses"},{"path":"moderndive.github.io/moderndive/reference/saratoga_houses.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"House Prices and Properties in Saratoga, New York — saratoga_houses","text":"data frame 1057 observations following 8 variables price price (US dollars) living_area Living Area (square feet) bathrooms Number Bathroom (half bathrooms shower tub) bedrooms Number Bedrooms fireplaces Number Fireplaces lot_size Size Lot (acres) age Age House (years) fireplace Whether house Fireplace","code":""},{"path":"moderndive.github.io/moderndive/reference/saratoga_houses.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"House Prices and Properties in Saratoga, New York — saratoga_houses","text":"Gathered https://docs.google.com/spreadsheets/d/1AY5eECqNIggKpYF3kYzJQBIuuOdkiclFhbjAmY3Yc8E/edit#gid=622599674","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_original.html","id":null,"dir":"Reference","previous_headings":"","what":"Spotify 52-Track Sample Dataset — spotify_52_original","title":"Spotify 52-Track Sample Dataset — spotify_52_original","text":"dataset contains sample 52 tracks Spotify, focusing two genres: deep-house metal. includes metadata tracks, artists, indicator whether track considered popular. dataset useful comparative analysis genres studying characteristics popular versus non-popular tracks within genres.","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_original.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spotify 52-Track Sample Dataset — spotify_52_original","text":"","code":"spotify_52_original"},{"path":"moderndive.github.io/moderndive/reference/spotify_52_original.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spotify 52-Track Sample Dataset — spotify_52_original","text":"data frame 52 rows 6 columns: track_id character. Spotify ID track. See: https://developer.spotify.com/documentation/web-api/ track_genre character. Genre track, either \"deep-house\" \"metal\". artists character. Names artists associated track. track_name character. Name track. popularity numeric. Popularity score track (0-100). See: https://developer.spotify.com/documentation/web-api/reference/#/operations/get-track popular_or_not character. Indicates whether track considered popular (\"popular\") (\"popular\"). Popularity defined score 50 higher corresponds 75th percentile popularity column.","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_original.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spotify 52-Track Sample Dataset — spotify_52_original","text":"https://developer.spotify.com/documentation/web-api/","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_original.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spotify 52-Track Sample Dataset — spotify_52_original","text":"","code":"data(spotify_52_original) head(spotify_52_original) #> # A tibble: 6 × 6 #>   track_id              track_genre artists track_name popularity popular_or_not #>   <chr>                 <chr>       <chr>   <chr>           <dbl> <chr>          #> 1 3fvsxmytTns1ApIWBqfA… deep-house  Jess B… Temptatio…         63 popular        #> 2 6Nd6ntkzr4t8o1FKPGOS… metal       Whites… Here I Go…         69 popular        #> 3 7MIKwg3dDCWhxMVjMvqF… metal       Blind … No Rain             1 not popular    #> 4 1fQaoh3imrMunWVZh5kf… metal       Avenge… Shepherd …         70 popular        #> 5 2O0vM6F7VMXf66Y5qUuW… deep-house  Nora V… I Wanna D…         56 popular        #> 6 7HjNOz8Y7H7uSySXuHNg… metal       Breaki… Ashes of …         61 popular"},{"path":"moderndive.github.io/moderndive/reference/spotify_52_shuffled.html","id":null,"dir":"Reference","previous_headings":"","what":"Spotify 52-Track Sample Dataset with 'popular or not' shuffled — spotify_52_shuffled","title":"Spotify 52-Track Sample Dataset with 'popular or not' shuffled — spotify_52_shuffled","text":"dataset contains sample 52 tracks Spotify, focusing two genres: deep-house metal. includes metadata tracks, artists, shuffled indicator whether track considered popular.","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_shuffled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spotify 52-Track Sample Dataset with 'popular or not' shuffled — spotify_52_shuffled","text":"","code":"spotify_52_shuffled"},{"path":"moderndive.github.io/moderndive/reference/spotify_52_shuffled.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spotify 52-Track Sample Dataset with 'popular or not' shuffled — spotify_52_shuffled","text":"data frame 52 rows 6 columns: track_id character. Spotify ID track. See: https://developer.spotify.com/documentation/web-api/ track_genre character. Genre track, either \"deep-house\" \"metal\". artists character. Names artists associated track. track_name character. Name track. popularity numeric. Popularity score track (0-100). See: https://developer.spotify.com/documentation/web-api/reference/#/operations/get-track popular_or_not character. shuffled version column name spotify_52_original data frame.","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_shuffled.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spotify 52-Track Sample Dataset with 'popular or not' shuffled — spotify_52_shuffled","text":"https://developer.spotify.com/documentation/web-api/","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_52_shuffled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spotify 52-Track Sample Dataset with 'popular or not' shuffled — spotify_52_shuffled","text":"","code":"data(spotify_52_shuffled) head(spotify_52_shuffled) #> # A tibble: 6 × 6 #>   track_id              track_genre artists track_name popularity popular_or_not #>   <chr>                 <chr>       <chr>   <chr>           <dbl> <chr>          #> 1 3fvsxmytTns1ApIWBqfA… deep-house  Jess B… Temptatio…         63 popular        #> 2 6Nd6ntkzr4t8o1FKPGOS… metal       Whites… Here I Go…         69 not popular    #> 3 7MIKwg3dDCWhxMVjMvqF… metal       Blind … No Rain             1 popular        #> 4 1fQaoh3imrMunWVZh5kf… metal       Avenge… Shepherd …         70 not popular    #> 5 2O0vM6F7VMXf66Y5qUuW… deep-house  Nora V… I Wanna D…         56 popular        #> 6 7HjNOz8Y7H7uSySXuHNg… metal       Breaki… Ashes of …         61 not popular"},{"path":"moderndive.github.io/moderndive/reference/spotify_by_genre.html","id":null,"dir":"Reference","previous_headings":"","what":"Spotify by Genre Dataset — spotify_by_genre","title":"Spotify by Genre Dataset — spotify_by_genre","text":"dataset contains information 6,000 tracks Spotify, categorized one six genres. includes various audio features, metadata tracks, indicator popularity. dataset useful analysis music trends, popularity prediction, genre-specific characteristics.","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_by_genre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spotify by Genre Dataset — spotify_by_genre","text":"","code":"spotify_by_genre"},{"path":"moderndive.github.io/moderndive/reference/spotify_by_genre.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spotify by Genre Dataset — spotify_by_genre","text":"data frame 6,000 rows 21 columns: track_id character. Spotify ID track. See: https://developer.spotify.com/documentation/web-api/ artists character. Names artists associated track. album_name character. Name album track appears. track_name character. Name track. popularity numeric. Popularity score track (0-100). See: https://developer.spotify.com/documentation/web-api/reference/#/operations/get-track duration_ms numeric. Duration track milliseconds. explicit logical. Whether track explicit content. danceability numeric. Danceability score track (0-1). See: https://developer.spotify.com/documentation/web-api/reference/#/operations/get-audio-features energy numeric. Energy score track (0-1). key numeric. key track (0-11 0 = C, 1 = C#/Db, etc.). loudness numeric. loudness track decibels (dB). mode numeric. Modality track (0 = minor, 1 = major). speechiness numeric. Speechiness score track (0-1). acousticness numeric. Acousticness score track (0-1). instrumentalness numeric. Instrumentalness score track (0-1). liveness numeric. Liveness score track (0-1). valence numeric. Valence score track (0-1), indicating musical positiveness. tempo numeric. Tempo track beats per minute (BPM). time_signature numeric. Time signature track (typically 3, 4, 5). track_genre character. Genre track (country, deep-house, dubstep, hip-hop, metal, rock). popular_or_not character. Indicates whether track considered popular (\"popular\") (\"popular\"). Popularity defined score 50 higher corresponds 75th percentile popularity column.","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_by_genre.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spotify by Genre Dataset — spotify_by_genre","text":"https://developer.spotify.com/documentation/web-api/","code":""},{"path":"moderndive.github.io/moderndive/reference/spotify_by_genre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spotify by Genre Dataset — spotify_by_genre","text":"","code":"data(spotify_by_genre) head(spotify_by_genre) #> # A tibble: 6 × 21 #>   track_id         artists album_name track_name popularity duration_ms explicit #>   <chr>            <chr>   <chr>      <chr>           <dbl>       <dbl> <lgl>    #> 1 2wrJq5XKLnmhRXH… Dan + … 10,000 Ho… 10,000 Ho…         78      167693 FALSE    #> 2 6AHJTA1BN7ePfCh… Luke B… Country U… Country On          0      236455 FALSE    #> 3 5eUtyONoPyfZYGr… Thomas… Mientras … Die A Hap…          1      228320 FALSE    #> 4 1e3QZ42GsP8cTy5… Zach B… New Count… Something…          3      228013 FALSE    #> 5 5Vnx0s7H73V3l6q… Zach B… Easy Coun… Something…          4      228013 FALSE    #> 6 0aEPP6wdKf2uBYE… Zach B… Relaxing … Something…          4      228013 FALSE    #> # ℹ 14 more variables: danceability <dbl>, energy <dbl>, key <dbl>, #> #   loudness <dbl>, mode <dbl>, speechiness <dbl>, acousticness <dbl>, #> #   instrumentalness <dbl>, liveness <dbl>, valence <dbl>, tempo <dbl>, #> #   time_signature <dbl>, track_genre <chr>, popular_or_not <chr>"},{"path":"moderndive.github.io/moderndive/reference/tactile_prop_red.html","id":null,"dir":"Reference","previous_headings":"","what":"Tactile sampling from a tub of balls — tactile_prop_red","title":"Tactile sampling from a tub of balls — tactile_prop_red","text":"Counting number red balls 33 tactile samples size n = 50 balls https://github.com/moderndive/moderndive/blob/master/data-raw/sampling_bowl.jpeg","code":""},{"path":"moderndive.github.io/moderndive/reference/tactile_prop_red.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tactile sampling from a tub of balls — tactile_prop_red","text":"","code":"tactile_prop_red"},{"path":"moderndive.github.io/moderndive/reference/tactile_prop_red.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tactile sampling from a tub of balls — tactile_prop_red","text":"data frame 33 rows representing different groups students' samples size n = 50 4 variables group Group members replicate Replicate number red_balls Number red balls sampled 50 prop_red Proportion red balls 50","code":""},{"path":[]},{"path":"moderndive.github.io/moderndive/reference/tidy_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates the five-number summary (minimum, first quartile, median, third quartile, maximum) for specified numeric columns in a data frame and returns the results in a long format. It also handles categorical, factor, and logical columns by counting the occurrences of each level or value, and includes the results in the summary. The type column indicates whether the data is numeric, character, factor, or logical. — tidy_summary","title":"This function calculates the five-number summary (minimum, first quartile, median, third quartile, maximum) for specified numeric columns in a data frame and returns the results in a long format. It also handles categorical, factor, and logical columns by counting the occurrences of each level or value, and includes the results in the summary. The type column indicates whether the data is numeric, character, factor, or logical. — tidy_summary","text":"function calculates five-number summary (minimum, first quartile, median, third quartile, maximum) specified numeric columns data frame returns results long format. also handles categorical, factor, logical columns counting occurrences level value, includes results summary. type column indicates whether data numeric, character, factor, logical.","code":""},{"path":"moderndive.github.io/moderndive/reference/tidy_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates the five-number summary (minimum, first quartile, median, third quartile, maximum) for specified numeric columns in a data frame and returns the results in a long format. It also handles categorical, factor, and logical columns by counting the occurrences of each level or value, and includes the results in the summary. The type column indicates whether the data is numeric, character, factor, or logical. — tidy_summary","text":"","code":"tidy_summary(df, columns = names(df), ...)"},{"path":"moderndive.github.io/moderndive/reference/tidy_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates the five-number summary (minimum, first quartile, median, third quartile, maximum) for specified numeric columns in a data frame and returns the results in a long format. It also handles categorical, factor, and logical columns by counting the occurrences of each level or value, and includes the results in the summary. The type column indicates whether the data is numeric, character, factor, or logical. — tidy_summary","text":"df data frame containing data. data frame must least one row. columns Unquoted column names tidyselect helpers specifying columns calculate summary. Defaults call columns inputted data frame. ... Additional arguments passed min, quantile, median, max functions, na.rm.","code":""},{"path":"moderndive.github.io/moderndive/reference/tidy_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates the five-number summary (minimum, first quartile, median, third quartile, maximum) for specified numeric columns in a data frame and returns the results in a long format. It also handles categorical, factor, and logical columns by counting the occurrences of each level or value, and includes the results in the summary. The type column indicates whether the data is numeric, character, factor, or logical. — tidy_summary","text":"tibble long format columns: column name column. n number non-missing values column numeric variables number non-missing values group categorical, factor, logical columns. group group level value categorical, factor, logical columns. type type data column (numeric, character, factor, logical). min minimum value (numeric columns). Q1 first quartile (numeric columns). mean mean value (numeric columns). median median value (numeric columns). Q3 third quartile (numeric columns). max maximum value (numeric columns). sd standard deviation (numeric columns).","code":""},{"path":"moderndive.github.io/moderndive/reference/tidy_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function calculates the five-number summary (minimum, first quartile, median, third quartile, maximum) for specified numeric columns in a data frame and returns the results in a long format. It also handles categorical, factor, and logical columns by counting the occurrences of each level or value, and includes the results in the summary. The type column indicates whether the data is numeric, character, factor, or logical. — tidy_summary","text":"","code":"# Example usage with a simple data frame df <- tibble::tibble(   category = factor(c(\"A\", \"B\", \"A\", \"C\")),   int_values = c(10, 15, 7, 8),   num_values = c(8.2, 0.3, -2.1, 5.5),   one_missing_value = c(NA, 1, 2, 3),   flag = c(TRUE, FALSE, TRUE, TRUE) )  # Specify columns tidy_summary(df, columns = c(category, int_values, num_values, flag)) #> # A tibble: 7 × 11 #>   column         n group type      min    Q1  mean median    Q3   max    sd #>   <chr>      <int> <chr> <chr>   <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1 int_values     4 NA    numeric   7    7.75 10       9   11.2   15    3.56 #> 2 num_values     4 NA    numeric  -2.1 -0.3   2.97    2.9  6.18   8.2  4.71 #> 3 category       2 A     factor   NA   NA    NA      NA   NA     NA   NA    #> 4 category       1 B     factor   NA   NA    NA      NA   NA     NA   NA    #> 5 category       1 C     factor   NA   NA    NA      NA   NA     NA   NA    #> 6 flag           1 FALSE logical  NA   NA    NA      NA   NA     NA   NA    #> 7 flag           3 TRUE  logical  NA   NA    NA      NA   NA     NA   NA     # Defaults to full data frame (note an error will be given without # specifying `na.rm = TRUE` since `one_missing_value` has an `NA`) tidy_summary(df, na.rm = TRUE) #> # A tibble: 8 × 11 #>   column                n group type    min    Q1  mean median    Q3   max    sd #>   <chr>             <int> <chr> <chr> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1 int_values            4 NA    nume…   7    7.75 10       9   11.2   15    3.56 #> 2 num_values            4 NA    nume…  -2.1 -0.3   2.97    2.9  6.18   8.2  4.71 #> 3 one_missing_value     3 NA    nume…   1    1.5   2       2    2.5    3    1    #> 4 category              2 A     fact…  NA   NA    NA      NA   NA     NA   NA    #> 5 category              1 B     fact…  NA   NA    NA      NA   NA     NA   NA    #> 6 category              1 C     fact…  NA   NA    NA      NA   NA     NA   NA    #> 7 flag                  1 FALSE logi…  NA   NA    NA      NA   NA     NA   NA    #> 8 flag                  3 TRUE  logi…  NA   NA    NA      NA   NA     NA   NA     # Example with additional arguments for quantile functions tidy_summary(df, columns = c(one_missing_value), na.rm = TRUE) #> # A tibble: 1 × 11 #>   column                n group type    min    Q1  mean median    Q3   max    sd #>   <chr>             <int> <chr> <chr> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1 one_missing_value     3 NA    nume…     1   1.5     2      2   2.5     3     1"},{"path":"moderndive.github.io/moderndive/reference/un_member_states_2024.html","id":null,"dir":"Reference","previous_headings":"","what":"UN Member States 2024 Dataset — un_member_states_2024","title":"UN Member States 2024 Dataset — un_member_states_2024","text":"dataset contains information 193 United Nations member states 2024. includes various attributes country names, ISO codes, official state names, geographic demographic data, economic indicators, participation Olympic Games. data designed use statistical analysis, data visualization, educational purposes.","code":""},{"path":"moderndive.github.io/moderndive/reference/un_member_states_2024.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UN Member States 2024 Dataset — un_member_states_2024","text":"","code":"un_member_states_2024"},{"path":"moderndive.github.io/moderndive/reference/un_member_states_2024.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UN Member States 2024 Dataset — un_member_states_2024","text":"data frame 193 rows 39 columns: country character. Name country. iso character. ISO 3166-1 alpha-3 country code. See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3 official_state_name character. Official name country. See: https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_and_their_capitals_in_native_languages continent factor. Continent country located. See: https://en.wikipedia.org/wiki/Continent region character. Specific region within continent. capital_city character. Name capital city. See: https://en.wikipedia.org/wiki/List_of_national_capitals_by_population capital_population numeric. Population capital city. capital_perc_of_country numeric. Percentage country’s population living capital. capital_data_year integer. Year capital population data collected. gdp_per_capita numeric. GDP per capita USD. See: https://data.worldbank.org/indicator/NY.GDP.PCAP.CD gdp_per_capita_year numeric. Year GDP per capita data collected. summers_competed_in numeric. Number times country competed Summer Olympics summer_golds integer. Number gold medals won Summer Olympics. summer_silvers integer. Number silver medals won Summer Olympics. summer_bronzes integer. Number bronze medals won Summer Olympics. summer_total integer. Total number medals won Summer Olympics. winters_competed_in integer. Number times country competed Winter Olympics winter_golds integer. Number gold medals won Winter Olympics. winter_silvers integer. Number silver medals won Winter Olympics. winter_bronzes integer. Number bronze medals won Winter Olympics. winter_total integer. Total number medals won Winter Olympics. combined_competed_ins integer. Total number times country competed Summer Winter Olympics. See: https://en.wikipedia.org/wiki/-time_Olympic_Games_medal_table combined_golds integer. Total number gold medals won Summer Winter Olympics. combined_silvers integer. Total number silver medals won Summer Winter Olympics. combined_bronzes integer. Total number bronze medals won Summer Winter Olympics. combined_total integer. Total number medals won Summer Winter Olympics. driving_side character. Indicates whether country drives left right side road. See: https://en.wikipedia.org/wiki/Left-_and_right-hand_traffic obesity_rate_2024 numeric. Percentage population classified obese 2024. See: https://en.wikipedia.org/wiki/List_of_countries_by_obesity_rate obesity_rate_2016 numeric. Percentage population classified obese 2016. has_nuclear_weapons_2024 logical. Indicates whether country nuclear weapons 2024. See: https://en.wikipedia.org/wiki/List_of_states_with_nuclear_weapons population_2024 numeric. Population country 2024. See: https://data.worldbank.org/indicator/SP.POP.TOTL area_in_square_km numeric. Area country square kilometers. See: https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_area area_in_square_miles numeric. Area country square miles. population_density_in_square_km numeric. Population density square kilometers. population_density_in_square_miles numeric. Population density square miles. income_group_2024 factor. World Bank income group classification 2024. See: https://data.worldbank.org/indicator/NY.GNP.PCAP.CD life_expectancy_2022 numeric. Life expectancy birth 2022. See: https://en.wikipedia.org/wiki/List_of_countries_by_life_expectancy fertility_rate_2022 numeric. Fertility rate 2022 (average number children per woman). See: https://en.wikipedia.org/wiki/List_of_countries_by_total_fertility_rate hdi_2022 numeric. Human Development Index 2022. See: https://en.wikipedia.org/wiki/List_of_countries_by_Human_Development_Index","code":""},{"path":"moderndive.github.io/moderndive/reference/un_member_states_2024.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UN Member States 2024 Dataset — un_member_states_2024","text":"","code":"data(un_member_states_2024) head(un_member_states_2024) #> # A tibble: 6 × 39 #>   country             iso   official_state_name    continent region capital_city #>   <chr>               <chr> <chr>                  <fct>     <chr>  <chr>        #> 1 Afghanistan         AFG   The Islamic Republic … Asia      South… Kabul        #> 2 Albania             ALB   The Republic of Alban… Europe    South… Tirana       #> 3 Algeria             DZA   The People's Democrat… Africa    North… Algiers      #> 4 Andorra             AND   The Principality of A… Europe    South… Andorra la … #> 5 Angola              AGO   The Republic of Angola Africa    Centr… Luanda       #> 6 Antigua and Barbuda ATG   Antigua and Barbuda    North Am… Carib… St. John's   #> # ℹ 33 more variables: capital_population <dbl>, capital_perc_of_country <dbl>, #> #   capital_data_year <int>, gdp_per_capita <dbl>, gdp_per_capita_year <dbl>, #> #   summers_competed_in <dbl>, summer_golds <int>, summer_silvers <int>, #> #   summer_bronzes <int>, summer_total <int>, winters_competed_in <int>, #> #   winter_golds <int>, winter_silvers <int>, winter_bronzes <int>, #> #   winter_total <int>, combined_competed_ins <int>, combined_golds <int>, #> #   combined_silvers <int>, combined_bronzes <int>, combined_total <int>, …"},{"path":[]},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-070","dir":"Changelog","previous_headings":"","what":"moderndive 0.7.0","title":"moderndive 0.7.0","text":"CRAN release: 2024-09-01 Added un_member_states_2024 data upcoming ModernDive v2 updates Added spotify_by_genre data upcoming ModernDive v2 updates Added tidy_summary() function summarize data frame columns upcoming ModernDive v2 updates Added old_faithful_2024 data upcoming ModernDive v2 updates Added coffee_quality data upcoming ModernDive v2 updates Added almonds_sample data upcoming ModernDive v2 updates","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-061","dir":"Changelog","previous_headings":"","what":"moderndive 0.6.1","title":"moderndive 0.6.1","text":"CRAN release: 2024-06-30 Added almonds_bowl almonds_sample_100 data upcoming ModernDive v2 updates Inference chapters Added early_january_2023_weather envoy_flights data upcoming ModernDive v2 updates derived data nycflights23 package","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-055","dir":"Changelog","previous_headings":"","what":"moderndive 0.5.5","title":"moderndive 0.5.5","text":"CRAN release: 2022-12-01 Addressing broom reverse dependency issue https://github.com/moderndive/moderndive/issues/128","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-054","dir":"Changelog","previous_headings":"","what":"moderndive 0.5.4","title":"moderndive 0.5.4","text":"CRAN release: 2022-05-13 Added early_january_weather consisting January subset nycflights13::weather @statsmed-sheep @caroline-mckenna @zyang2k @CJParkNW added coffee_quality dataset: 1340 samples coffee tested quality level @abbidabbers @georgiagans @kaceyjj added amazon_books dataset: sample books available purchase Amazon.com @ewhalen1 @vivala1 @Swaha294 @CCccc-76 added ipf_lifts consisting international power lifting results @-m-foster @mflesaker @ajhaller added babies maternal smoking infant health @tianshu-zhang @q-w-@kbruncati @katelyndiaz added ev_charging: information 3,395 high resolution electric vehicle charging sessions. @rwu08 @arrismo @rporta23 @katephan added ma_traffic_2020_vs_2019 consisting collisions information sourced reports produced Massachusetts Traffic Data Management System. @amutaya @catherinepeppers @agoswa @wndlovu added mass_traffic_2020 consisting traffic data 13 Massachusetts counties @shirleyzhang-1999 @hartlegr @silasweden added mario_kart_auction dataset @heschmidt @evejcik @tessgold @nikkischuldt added avocados consisting avocado prices dataset downloaded Hass Avocado Board website May 2018. @hongtonglin @alejanmg @egordonhalpern added saratoga_houses random sample 1057 houses taken full Saratoga Housing Data.","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-053","dir":"Changelog","previous_headings":"","what":"moderndive 0.5.3","title":"moderndive 0.5.3","text":"CRAN release: 2022-01-20 Added alaska_flights consisting Alaska Airlines subset nycflights13::flights","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-052","dir":"Changelog","previous_headings":"","what":"moderndive 0.5.2","title":"moderndive 0.5.2","text":"CRAN release: 2021-07-21 Changed printing non-baseline categorical variable levels regression table cleaner #102 Added explicit conf.level argument get_regression_table() inherited broom::tidy.lm() Improved main package vignette based feedback @lwjohnst86 & @lisamr Added JOSE publication vignettes/paper.md Fixed pkgdown covr issues, defragged documentation.","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-051","dir":"Changelog","previous_headings":"","what":"moderndive 0.5.1","title":"moderndive 0.5.1","text":"CRAN release: 2021-01-08 Use vdiffr conditionally","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-050","dir":"Changelog","previous_headings":"","what":"moderndive 0.5.0","title":"moderndive 0.5.0","text":"CRAN release: 2020-07-19 Modified vignettes/-moderndive.Rmd main vignette Use fullrange=TRUE draw regression lines entire support x-axis (@wjhopper) Use level set different level confidence interval shading (@echasnovski) Added new function geom_categorical_model() visualizing regression models one categorical explanatory/predictor variable (@wjhopper) Add deprecation warning message gg_parallel_slopes() directing users use geom_parallel_slopes() instead (@mariumtapal)","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-040","dir":"Changelog","previous_headings":"","what":"moderndive 0.4.0","title":"moderndive 0.4.0","text":"CRAN release: 2019-11-04 Added geom_parallel_slopes() geom extension ggplot2 package plot parallel slopes regression models one numerical one categorical variable (possible using ggplot2::geom_smooth()). Note renders gg_parallel_slopes() function added v0.3.0 obsolete. Added example geom_parallel_slopes() “moderndive?” vignette Added student names (permission obtained cases) pennies_resamples data frame columns Respects dplyr::group_by() grouping Can handle missing data either passing na.rm = TRUE argument passing standard stats:cor(use = \"complete.obs\") argument via ...","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-030","dir":"Changelog","previous_headings":"","what":"moderndive 0.3.0","title":"moderndive 0.3.0","text":"CRAN release: 2019-07-18 Added minimally viable “parallel slopes” regression model plotting function gg_parallel_slopes(). future hope define new ggplot2 geom. Added “moderndive?” vignette Added ID argument get_regression_points() return column identifies observational units/rows Added DD_vs_SB: Dunkin Donuts Starbucks Eastern Massachusetts data collected @DelaneyMoran Added promotions: tibble version openintro::gender.discrimination used illustrate permutation test. Added MA_schools: Relationship SAT scores socio-economic status Massachusetts high schools. Added mythbusters_yawn: Data study Mythbusters show whether yawning Added promotions_shuffled: one instance promotions gender permuted/shuffled Original pennies_sample sample 40 pennies pennies renamed orig_pennies_sample. New pennies_sample consists 50 pennies sampled bank Northampton, MA, USA 2019/2/1. Added pennies_resamples: 35 bootstrap resamples new pennies_sample Added movies_genre: random sample 32 action 36 romance movies ggplot2movies::movies Removed assertive::assert() code Converted house_prices$date dttm (date-time) date per R4DS comment using simplest data type possible","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-020","dir":"Changelog","previous_headings":"","what":"moderndive 0.2.0","title":"moderndive 0.2.0","text":"CRAN release: 2018-07-06 Updated package : Use DataCamp’s Modeling Data Tidyverse, particular added evals house_prices datasets updated get_regression_table() get_regression_points() functions. v0.4.0 ModernDive textbook Details: Created get_correlation() function omit $ syntax return data frame Import infer::rep_sample_n() instead defined version, function now included infer Added evals, house_prices, tactile_prop_red, pennies_sample mythbusters_yawn datasets Added mean squared error root mean squared error output get_regression_summaries() Original outcome variable included newdata, output well residual (See Issue 17). Otherwise omit residual Removed tidyverse Depends, Imports, Suggests","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-011","dir":"Changelog","previous_headings":"","what":"moderndive 0.1.1","title":"moderndive 0.1.1","text":"CRAN release: 2018-01-22 Fixed broken url ?bowl_samples","code":""},{"path":"moderndive.github.io/moderndive/news/index.html","id":"moderndive-010","dir":"Changelog","previous_headings":"","what":"moderndive 0.1.0","title":"moderndive 0.1.0","text":"CRAN release: 2018-01-22 Added three get_regression_* functions meant novice R users/regression fitters process regression model outputs pennies: 800 pennies treated population simulate sampling numerical variable (year minting) bowl: Bowl 2400 balls 900 red treated population simulate sampling categorical variable (color). Also known urn sampling framework . bowl_samples: data tactile version sampling bowl done class: 10 groups sampled n=50 balls counted number red [ADD MODERNDIVE LINK]","code":""}]
